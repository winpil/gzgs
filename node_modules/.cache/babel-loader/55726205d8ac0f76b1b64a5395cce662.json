{"remainingRequest":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\src\\utils\\request.js","dependencies":[{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\src\\utils\\request.js","mtime":1620299676924},{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZQoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICcnLAogIC8vIHVybCA9IGJhc2UgdXJsICsgcmVxdWVzdCB1cmwKICAvLyB3aXRoQ3JlZGVudGlhbHM6IHRydWUsIC8vIHNlbmQgY29va2llcyB3aGVuIGNyb3NzLWRvbWFpbiByZXF1ZXN0cwogIHRpbWVvdXQ6IDUwMDAgLy8gcmVxdWVzdCB0aW1lb3V0Cgp9KTsgLy8gcmVxdWVzdCBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIGRvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50CiAgaWYgKHN0b3JlLmdldHRlcnMudG9rZW4pIHsKICAgIC8vIGxldCBlYWNoIHJlcXVlc3QgY2FycnkgdG9rZW4KICAgIC8vIFsnWC1Ub2tlbiddIGlzIGEgY3VzdG9tIGhlYWRlcnMga2V5CiAgICAvLyBwbGVhc2UgbW9kaWZ5IGl0IGFjY29yZGluZyB0byB0aGUgYWN0dWFsIHNpdHVhdGlvbgogICAgY29uZmlnLmhlYWRlcnNbJ3Rva2VuJ10gPSBnZXRUb2tlbigpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovKioKICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwogKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQoqLwoKLyoqCiAqIERldGVybWluZSB0aGUgcmVxdWVzdCBzdGF0dXMgYnkgY3VzdG9tIGNvZGUKICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUKICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQogKi8KZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIGlmIHRoZSBjdXN0b20gY29kZSBpcyBub3QgMjAwLCBpdCBpcyBqdWRnZWQgYXMgYW4gZXJyb3IuCgogIGlmIChyZXMucmV0Y29kZSAhPT0gMjAwKSB7CiAgICBNZXNzYWdlKHsKICAgICAgbWVzc2FnZTogcmVzLnN0YXR1cyB8fCAnRXJyb3InLAogICAgICB0eXBlOiAnZXJyb3InLAogICAgICBkdXJhdGlvbjogNSAqIDEwMDAKICAgIH0pOwogICAgY29uc29sZS5sb2coJ3JldHR0dHQnLCByZXMucmV0Y29kZSk7IC8vIDUwMDA4OiBJbGxlZ2FsIHRva2VuOyA1MDAxMjogT3RoZXIgY2xpZW50cyBsb2dnZWQgaW47IDUwMDE0OiBUb2tlbiBleHBpcmVkOwoKICAgIGlmIChyZXMucmV0Y29kZSA9PSA1MDAwOCB8fCByZXMucmV0Y29kZSA9PSA1MDAxMiB8fCByZXMucmV0Y29kZSA9PSA1MDAxNCkgewogICAgICAvLyB0byByZS1sb2dpbgogICAgICBNZXNzYWdlQm94LmNvbmZpcm0oJ1lvdSBoYXZlIGJlZW4gbG9nZ2VkIG91dCwgeW91IGNhbiBjYW5jZWwgdG8gc3RheSBvbiB0aGlzIHBhZ2UsIG9yIGxvZyBpbiBhZ2FpbicsICdDb25maXJtIGxvZ291dCcsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ1JlLUxvZ2luJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IocmVzLnN0YXR1cyB8fCAnRXJyb3InKSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiByZXM7CiAgfQp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnZXJyJyArIGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHZhciByZXMgPSBlcnJvci5yZXNwb25zZS5kYXRhOwoKICBpZiAocmVzLnJldGNvZGUgPT0gNTAwMDggfHwgcmVzLnJldGNvZGUgPT0gNTAwMTIgfHwgcmVzLnJldGNvZGUgPT0gNTAwMTQpIHsKICAgIC8vIHRvIHJlLWxvZ2luCiAgICBNZXNzYWdlQm94LmNvbmZpcm0oJ+aCqOW3sueZu+mZhui2heaXtiwg5Y+v54K55Ye75Y+W5raI5YGc55WZ5q2k55WM6Z2i5oiW6YeN5paw55m75b2V77yBJywgJ+eZu+mZhuehruiupCcsIHsKICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfph43mlrDnmbvlvZUnLAogICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICB9KTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgIH0pOwogIH0KCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["D:/job/gs/gsmon/gsmon_web/hzgs-admin/src/utils/request.js"],"names":["axios","MessageBox","Message","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data","retcode","message","status","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload","Error","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: '', // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n\n    if (store.getters.token) {\n      // let each request carry token\n      // ['X-Token'] is a custom headers key\n      // please modify it according to the actual situation\n      config.headers['token'] = getToken()\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n  */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n\n    // if the custom code is not 200, it is judged as an error.\n    if (res.retcode !== 200) {\n      Message({\n        message: res.status || 'Error',\n        type: 'error',\n        duration: 5 * 1000\n      })\n      console.log('rettttt', res.retcode)\n      // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n      if (res.retcode == 50008 || res.retcode == 50012 || res.retcode == 50014) {\n        // to re-login\n        MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n          confirmButtonText: 'Re-Login',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(() => {\n          store.dispatch('user/resetToken').then(() => {\n            location.reload()\n          })\n        })\n      }\n      return Promise.reject(new Error(res.status || 'Error'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    const res = error.response.data\n    if (res.retcode == 50008 || res.retcode == 50012 || res.retcode == 50014) {\n      // to re-login\n      MessageBox.confirm('您已登陆超时, 可点击取消停留此界面或重新登录！', '登陆确认', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        store.dispatch('user/resetToken').then(() => {\n          location.reload()\n        })\n      }).catch(err => {console.log(err)})\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}