{"remainingRequest":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\src\\store\\modules\\permission.js","dependencies":[{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\src\\store\\modules\\permission.js","mtime":1620299676465},{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\job\\gs\\gsmon\\gsmon_web\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6L2pvYi9ncy9nc21vbi9nc21vbl93ZWIvaHpncy1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IGFzeW5jUm91dGVzLCBjb25zdGFudFJvdXRlcyB9IGZyb20gJ0Avcm91dGVyJzsKLyoqCiAqIFVzZSBtZXRhLnJvbGUgdG8gZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW50IHVzZXIgaGFzIHBlcm1pc3Npb24KICogQHBhcmFtIHJvbGVzCiAqIEBwYXJhbSByb3V0ZQogKi8KCmZ1bmN0aW9uIGhhc1Blcm1pc3Npb24ocm9sZXMsIHJvdXRlKSB7CiAgaWYgKHJvdXRlLm1ldGEgJiYgcm91dGUubWV0YS5yb2xlcykgewogICAgcmV0dXJuIHJvbGVzLnNvbWUoZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgcmV0dXJuIHJvdXRlLm1ldGEucm9sZXMuaW5jbHVkZXMocm9sZSk7CiAgICB9KTsKICB9IGVsc2UgewogICAgcmV0dXJuIHRydWU7CiAgfQp9Ci8qKgogKiBGaWx0ZXIgYXN5bmNocm9ub3VzIHJvdXRpbmcgdGFibGVzIGJ5IHJlY3Vyc2lvbgogKiBAcGFyYW0gcm91dGVzIGFzeW5jUm91dGVzCiAqIEBwYXJhbSByb2xlcwogKi8KCgpleHBvcnQgZnVuY3Rpb24gZmlsdGVyQXN5bmNSb3V0ZXMocm91dGVzLCByb2xlcykgewogIHZhciByZXMgPSBbXTsKICByb3V0ZXMuZm9yRWFjaChmdW5jdGlvbiAocm91dGUpIHsKICAgIHZhciB0bXAgPSBfb2JqZWN0U3ByZWFkKHt9LCByb3V0ZSk7CgogICAgaWYgKGhhc1Blcm1pc3Npb24ocm9sZXMsIHRtcCkpIHsKICAgICAgaWYgKHRtcC5jaGlsZHJlbikgewogICAgICAgIHRtcC5jaGlsZHJlbiA9IGZpbHRlckFzeW5jUm91dGVzKHRtcC5jaGlsZHJlbiwgcm9sZXMpOwogICAgICB9CgogICAgICByZXMucHVzaCh0bXApOwogICAgfQogIH0pOwogIHJldHVybiByZXM7Cn0KdmFyIHN0YXRlID0gewogIHJvdXRlczogW10sCiAgYWRkUm91dGVzOiBbXQp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9ST1VURVM6IGZ1bmN0aW9uIFNFVF9ST1VURVMoc3RhdGUsIHJvdXRlcykgewogICAgc3RhdGUuYWRkUm91dGVzID0gcm91dGVzOwogICAgc3RhdGUucm91dGVzID0gY29uc3RhbnRSb3V0ZXMuY29uY2F0KHJvdXRlcyk7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZW5lcmF0ZVJvdXRlczogZnVuY3Rpb24gZ2VuZXJhdGVSb3V0ZXMoX3JlZiwgcm9sZXMpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICB2YXIgYWNjZXNzZWRSb3V0ZXMgPSBhc3luY1JvdXRlczsgLy8gaWYgKHJvbGVzLmluY2x1ZGVzKCdhZG1pbicpKSB7CiAgICAgIC8vICAgYWNjZXNzZWRSb3V0ZXMgPSBhc3luY1JvdXRlcyB8fCBbXQogICAgICAvLyB9IGVsc2UgewogICAgICAvLyAgIGFjY2Vzc2VkUm91dGVzID0gZmlsdGVyQXN5bmNSb3V0ZXMoYXN5bmNSb3V0ZXMsIHJvbGVzKQogICAgICAvLyB9CgogICAgICBjb21taXQoJ1NFVF9ST1VURVMnLCBhY2Nlc3NlZFJvdXRlcyk7CiAgICAgIHJlc29sdmUoYWNjZXNzZWRSb3V0ZXMpOwogICAgfSk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["D:/job/gs/gsmon/gsmon_web/hzgs-admin/src/store/modules/permission.js"],"names":["asyncRoutes","constantRoutes","hasPermission","roles","route","meta","some","role","includes","filterAsyncRoutes","routes","res","forEach","tmp","children","push","state","addRoutes","mutations","SET_ROUTES","concat","actions","generateRoutes","commit","Promise","resolve","accessedRoutes","namespaced"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,UAA5C;AAEA;;;;;;AAKA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,KAA7B,EAAoC;AAClC,WAAOA,KAAK,CAACG,IAAN,CAAW,UAAAC,IAAI;AAAA,aAAIH,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBK,QAAjB,CAA0BD,IAA1B,CAAJ;AAAA,KAAf,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;AAED;;;;;;;AAKA,OAAO,SAASE,iBAAT,CAA2BC,MAA3B,EAAmCP,KAAnC,EAA0C;AAC/C,MAAMQ,GAAG,GAAG,EAAZ;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAR,KAAK,EAAI;AACtB,QAAMS,GAAG,qBAAQT,KAAR,CAAT;;AACA,QAAIF,aAAa,CAACC,KAAD,EAAQU,GAAR,CAAjB,EAA+B;AAC7B,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChBD,QAAAA,GAAG,CAACC,QAAJ,GAAeL,iBAAiB,CAACI,GAAG,CAACC,QAAL,EAAeX,KAAf,CAAhC;AACD;;AACDQ,MAAAA,GAAG,CAACI,IAAJ,CAASF,GAAT;AACD;AACF,GARD;AAUA,SAAOF,GAAP;AACD;AAED,IAAMK,KAAK,GAAG;AACZN,EAAAA,MAAM,EAAE,EADI;AAEZO,EAAAA,SAAS,EAAE;AAFC,CAAd;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,oBAACH,KAAD,EAAQN,MAAR,EAAmB;AAC7BM,IAAAA,KAAK,CAACC,SAAN,GAAkBP,MAAlB;AACAM,IAAAA,KAAK,CAACN,MAAN,GAAeT,cAAc,CAACmB,MAAf,CAAsBV,MAAtB,CAAf;AACD;AAJe,CAAlB;AAOA,IAAMW,OAAO,GAAG;AACdC,EAAAA,cADc,gCACanB,KADb,EACoB;AAAA,QAAjBoB,MAAiB,QAAjBA,MAAiB;AAChC,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B,UAAIC,cAAc,GAAG1B,WAArB,CAD4B,CAE5B;AACA;AACA;AACA;AACA;;AACAuB,MAAAA,MAAM,CAAC,YAAD,EAAeG,cAAf,CAAN;AACAD,MAAAA,OAAO,CAACC,cAAD,CAAP;AACD,KATM,CAAP;AAUD;AAZa,CAAhB;AAeA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbX,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,SAAS,EAATA,SAHa;AAIbG,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { asyncRoutes, constantRoutes } from '@/router'\n\n/**\n * Use meta.role to determine if the current user has permission\n * @param roles\n * @param route\n */\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return roles.some(role => route.meta.roles.includes(role))\n  } else {\n    return true\n  }\n}\n\n/**\n * Filter asynchronous routing tables by recursion\n * @param routes asyncRoutes\n * @param roles\n */\nexport function filterAsyncRoutes(routes, roles) {\n  const res = []\n  routes.forEach(route => {\n    const tmp = { ...route }\n    if (hasPermission(roles, tmp)) {\n      if (tmp.children) {\n        tmp.children = filterAsyncRoutes(tmp.children, roles)\n      }\n      res.push(tmp)\n    }\n  })\n\n  return res\n}\n\nconst state = {\n  routes: [],\n  addRoutes: []\n}\n\nconst mutations = {\n  SET_ROUTES: (state, routes) => {\n    state.addRoutes = routes\n    state.routes = constantRoutes.concat(routes)\n  }\n}\n\nconst actions = {\n  generateRoutes({ commit }, roles) {\n    return new Promise(resolve => {\n      let accessedRoutes = asyncRoutes\n      // if (roles.includes('admin')) {\n      //   accessedRoutes = asyncRoutes || []\n      // } else {\n      //   accessedRoutes = filterAsyncRoutes(asyncRoutes, roles)\n      // }\n      commit('SET_ROUTES', accessedRoutes)\n      resolve(accessedRoutes)\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n"]}]}