{"remainingRequest":"D:\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\hzgs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hzgs-admin\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hzgs-admin\\src\\views\\dashboard\\index.vue","mtime":1624279750758},{"path":"D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"gs-home-wrapper\" @click.capture=\"showWindow = false\" ref=\"doc\">\n    <img src=\"../../assets/img/background.png\" class=\"bg-img\" alt=\"\">\n    <div class=\"top-title\">\n      <img src=\"../../assets/img/topleft.png\" class=\"top-left-wrapper\" alt=\"\">\n      <div class=\"top-mid-wrapper\">\n        <img src=\"../../assets/img/topmid.png\" class=\"f-width f-width\">\n        <span class=\"title-content f-width abs\">振动预警防护全覆盖平台</span>\n      </div>\n      <img src=\"../../assets/img/topright.png\" class=\"top-right-img abs\">\n      <span style=\"position: absolute;z-index: 9;color: #23cefd;right: 3%;top: 10%;\">{{time}}</span>\n    </div>\n    <svg-icon :icon-class=\"fullscreen?'exit-fullscreen':'fullscreen'\" @click=\"handleFullScreen\" style=\"position: absolute;right: 2vw;top: 5vh;color: #23cefd;;z-inde: 999;cursor: pointer;width: 20px;height: 20px;\"/>\n    <div class=\"bottom-content f-width abs\">\n      <div class=\"content-mid f-height abs\" style=\"width: 76.5%;\"> \n        <div class=\"f-width rel\" style=\"height: 97.5%;margin-bottom: 1.5vh;\">\n          <!-- 线路信息窗口开始 -->\n          <div class=“gs-info-window-line” \n          :style=\"{'position': 'absolute', 'width': '250px', 'height': '145px', 'background': 'rgba(8, 32, 51, 0.85)', 'z-index': '12', 'border-radius': '6px', 'color': 'rgb(35 206 253)', 'left': '10px', 'top': '10px','font-size': '14px'}\"\n          ref=\"infoWindow\" \n          v-show=\"showWindow\">\n              <div class=\"line-info-title\">\n                <span class=\"title-detail\">\n                  <span v-if=\"infoType == 0\">线路名称：{{currentZone.name}}</span>  \n                  <span v-if=\"infoType == 1\">设备名称：{{currentDev.name}}</span>  \n                </span>\n              </div>\n              <div class=\"line-info-content\" v-if=\"infoType == 0\">\n                <div class=\"content-detail\"><span>防区数：</span> <span>{{currentZone.fields_num}}</span></div>\n                <div class=\"content-detail\"><span>告警事件数：</span> <span>{{currentZone.alarm_num}}</span> </div>\n                <div class=\"content-detail\"><span>负责人一：</span> <span>{{currentZone.person1}}</span> </div>\n                <div class=\"content-detail\"><span>负责人二：</span> <span>{{currentZone.person2}}</span> </div>\n              </div>\n              <div class=\"line-info-content\" v-if=\"infoType == 1\">\n                <div class=\"content-detail\"><span>设备号：</span> <span>{{currentDev.device_id}}</span></div>\n                <div class=\"content-detail\"><span>告警事件数：</span> <span>{{currentDev.alarm_num}}</span> </div>\n                <!-- <div class=\"content-detail\"><span>发生时间：</span> <span>{{currentDev.time}}</span> </div> -->\n                <!-- <div class=\"content-detail\"><span>负责人二：</span> <span>李四</span> </div> -->\n              </div>\n          </div>\n          <!-- 线路信息窗口结束 -->\n          <img src=\"../../assets/img/map.png\" class=\"f-width f-height abs\" style=\"left: 0; top: 0;z-index: 2;\" alt=\"\">\n          <baidu-map :mapStyle=\"mapStyle\" :mapClick=\"false\" :scroll-wheel-zoom=\"true\" :center=\"center\" :zoom=\"zoom\" @ready=\"handler\" class=\"bm-view\">\n            <!-- 自定义点 -->\n            <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item) in linePoint\" :key=\"item.id\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\"></bm-marker>\n            <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item) in alarmPoints\" :key=\"item.id\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\"></bm-marker>\n             <!-- <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item, index) in linePoint\" :key=\"index\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\" @click=\"handleShowDecInfo(item.id)\"></bm-marker>-->\n            <!-- <bm-marker :position=\"item\" :dragging=\"true\" v-for=\"(item, index) in polylinePath\" :key=\"index\" :icon=\"{url: 'https://s1.ax1x.com/2020/08/03/aUAul9.gif', size: {width: 35, height: 35}}\"></bm-marker> -->\n            <!-- 折线控件 -->\n            <!--<div v-for=\"(line, index) in lines\" :key=\" 'line' + '-' + line.zone_id + '-' + index\">-->\n              <bm-polyline v-for=\"(item, index2) in lines2\" :key=\"item.field_id\" :path=\"item.points\" :stroke-color=\"item.lineColor\"\n                @mouseover=\"lineIn(index2)\"\n                @mouseout=\"lineOut(index2)\"\n                :stroke-opacity=\"0.75\" :stroke-weight=\"4\" :editing=\"false\" @click=\"test(line.zone_id)\">\n              </bm-polyline>    \n            <!--</div>-->\n            <bm-polyline v-for=\"(field, index) in alarmlines\" :key=\"'alarm' + index\" :path=\"field.nodes\" stroke-color=\"#ec2d2e\"\n              style=\"z-index: 100\"\n              :stroke-opacity=\"0.9\" :stroke-weight=\"4\" :editing=\"false\" @click=\"test(field.zone)\">\n            </bm-polyline>    \n          </baidu-map>\n        </div>\n      </div>\n      <div class=\"content-right f-height abs\" style=\"width: 25%;right: 0;padding: 0 20px;\">\n        <div class=\"f-width rel\" style=\"height: 17%;margin-bottom: 1.5vh;position:relative;\">\n          <img src=\"../../assets/img/condition.png\" class=\"f-width f-height\" alt=\"\">\n          <div class=\"switch-all\">\n            <span style=\"color:#fff;font-size: 5px;\">查看实时数据：</span>\n            <span class=\"switch\">\n                <div class=\"switch-bg\" :class=\"{on:realTime==1}\">\n                    <div class=\"switch-btn\" :class=\"{on:realTime==1}\" @click=\"openSwitch\" ></div>\n                </div>\n            </span>\n          </div>\n          <div class=\"com-title-wrapper abs\">\n            <img src=\"../../assets/img/title.png\" class=\"f-width f-height\" alt=\"\">\n            <span class=\"com-title-content abs\">线路时间选择</span>\n          </div>\n          <div class=\"f-width f-height abs\" style=\"top: 35%;left: 3.5%;\">\n            <el-select ref=\"selectLine\" class=\"map-select\" size=\"mini\" v-model=\"mapForm.line\" @change=\"changeLine\" v-bind:disabled=\"realTime\">\n              <el-option v-for=\"item in lineList\" :key=\"item.field_id\"  :value=\"item.field_id\" :label=\"item.field_id\">\n                {{item.field_id}}\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"f-width f-height abs\" style=\"top: 65%;left: 3.5%;\">\n            <el-select ref=\"selectTime\" class=\"map-select\" size=\"mini\" v-model=\"mapForm.time\"  @change=\"changeTime\" v-bind:disabled=\"realTime\">\n              <el-option value=\"1\" label=\"一周内\">\n                一周内\n              </el-option>\n              <el-option value=\"2\" label=\"两周内\">\n                两周内\n              </el-option>\n              <el-option value=\"3\" label=\"一月内\">\n                一月内\n              </el-option>\n            </el-select>\n          </div>\n        </div>\n        <div class=\"f-width rel\" style=\"height: 80.5%;\">\n          <img src=\"../../assets/img/event.png\" class=\"f-width f-height\" alt=\"\">\n          <div class=\"com-title-wrapper abs\">\n            <img src=\"../../assets/img/title.png\" class=\"f-width f-height\" alt=\"\">\n            <span class=\"com-title-content abs\">近期事件列表</span>\n          </div>\n          <div class=\"abs f-width user_skills scrollbar\" style=\"top: 8%;height: 100%;\">\n            <el-scrollbar style=\"height:100%\">\n            <el-table\n              :data=\"tableData\"\n              style=\"width: 94%;height:84%\">\n              <el-table-column\n                prop=\"field_id\"\n                align=\"center\"\n                min-width=\"100\"\n                label=\"线路名称\">\n              </el-table-column>\n              <el-table-column\n                prop=\"alarm_level\"\n                label=\"报警级别\"\n                align=\"left\">\n              </el-table-column>\n            </el-table>\n            </el-scrollbar>\n          </div>\n          \n        </div>\n        \n      </div>\n    </div>    \n\n    \n\n    <!-- 地区信息窗口开始 -->\n    <div draggable=\"true\" style=\"display: none;\">\n      <div class=\"gs-info-window-area\">\n        <div class=\"area-wrapper\" @click=\"handleShowAreaInfo\">\n          <span>地图统计信息</span> \n          <div class=\"\" style=\"position: absolute;right: 15px;top: 0px;\">\n            <i v-if=\"showArea == true\" class=\"el-icon-arrow-up\" />\n            <i v-else class=\"el-icon-arrow-down\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 地区信息窗口结束 -->\n  </div>\n</template>\n\n<script>\nimport { queryArea } from '@/api/area/area.js'\nimport { queryAlarm,queryRealTimeAlarm } from '@/api/alarm/alarm.js'\nimport { queryLineDetail } from '@/api/line/line.js'\nimport echarts from 'echarts'\nimport { queryAreaGps, queryDeviceGps, getAreaInfo, getMapCenter, getDeviceInfo, queryZoneInfo, getAlarmFields } from '@/api/dashboard/dashboard.js'\nconst NORMAL_COLOR = '#23cefd'\nconst SPECIAL_COLOR = \"black\"\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      fullscreen: false,\n      value1: '',\n      time: '',\n      showArea: true,\n      center: {lng: 120.203365, lat: 30.211784},\n      zoom: 8,\n      polylinePath: [],\n      lines: [],\n      lines2: [],\n      linePoint:[],\n      alarmlines: [],\n      lineColor: [],\n      showWindow: false,\n      mapForm: {\n        area: '请选择区域',\n        time: '一周内'\n      },\n      currentDev: {},\n      currentZone: {},\n      infoType: '',\n      areaList: [],\n      lineList: [],\n      defaultAreaId : \"0001\",\n      alarmPoints : [],\n      currentLine : \"全部\",\n      currentDate : 1,\n      currentStartDate : this.defaultStartDate(),\n      currentEndDate : this.defaultEndDate(),\n      realTime:false,\n      mapStyle: {\n        features: [\"road\", \"building\", \"water\", \"land\"], //隐藏地图上的\"poi\",\n        style: \"midnight\"\n        // var style_map=['normal','light','dark','redalert','googlelite','grassgreen','midnight','pink','darkgreen','bluish','grayscale','hardedge'];\n        //分别风格是：默认地图样式，清新蓝风格，黑夜风格，红色警戒风格，精简风格，自然绿风格，午夜蓝风格，浪漫粉风格，青春绿风格，清新蓝绿风格，高端灰风格，强边界风格\n      },\n      chart1: '',\n      chart2: '',\n      chart3: '',\n      chart1Data: [],\n      tableData: [{\n            date: '2016-05-02',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }]\n    \n    \n    }\n  },\n  created() {\n    //this.getInfo()\n    this.getDeviceGps()\n    //this.getCenter() // 获取地图坐标中线点\n    //this.getAreaInfo() // 区域统计信息\n    this.getAreaList() // 获取地区列表\n    this.getTableData() // 获取事件列表数据\n    this.queryLineDetail() // 获取所有责任区的告警事件\n    this.time = (new Date()).toLocaleString()\n  },\n  mounted() {\n    setInterval(() => {\n      if(this.realTime){\n        this.getRealTableData();\n      }else{\n        this.getTableData();\n      }\n    }, 1000*60)\n    setInterval(() => {\n      //this.getAlarmFields()\n    }, 5000)\n    setInterval(() => {\n      this.gettTime()\n    }, 1000)\n  },\n  computed: {\n    alarmCount() {\n      let count = 0\n      this.chart1Data.forEach((item, index) => {\n        if (index > 0) {\n          count += Number(item[0])\n        }\n      })\n      return count\n    }\n  },\n  methods: {\n    initChart1() {\n      this.chart1 = echarts.init(this.$refs.chart1)\n      this.chart1.setOption({\n          title: {\n            show: \"true\",\n            text: \"各责任区事件统计\",\n            textStyle: {//主标题文本样式{\"fontSize\": 18,\"fontWeight\": \"bolder\",\"color\": \"#333\"}\n              // fontFamily: 'Arial, Verdana, sans...',\n              fontSize: 16,\n              // fontStyle: 'normal',\n              // fontWeight: 'normal',\n              color: \"#d6d2d2\"\n            },\n            top: \"0px\",\n            left: \"8%\"\n          },\n          dataset: {\n              source: this.chart1Data\n          },\n          grid: {\n            top: \"15%\",\n            left: \"40px\",\n            bottom: \"17.5%\"\n          },\n          xAxis: {\n              type: 'value',\n              // name: '事件数',\n              color: \"#d6d2d2\",\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  }\n              },\n              axisLine: {\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              }\n          },\n          yAxis: {\n              type: 'category',\n              // name: '责任区名',\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  },\n                  width: '50px'\n              },\n              axisLine: {\n                  show: false,\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              },\n              nameTextStyle: {\n                width: \"50px\"\n              }\n          },\n          color: \"#23cefd\",\n          // grid: {containLabel: true},\n          series: [\n              {\n                  type: 'bar',\n                  encode: {\n                      // Map the \"amount\" column to X axis.\n                      x: 'amount',\n                      // Map the \"product\" column to Y axis\n                      y: 'product'\n                  },\n                  barWidth: 20\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart1.resize();\n      })\n    },\n\n    // 获取GPS数据\n    getInfo() {\n      this.listLoading = true\n      queryAreaGps(this.queryForm).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          let originArr = res.result // 所有责任区（含id）\n          let afterArr = [] // 数据处理重组，最内层添加线条颜色字段\n          originArr.forEach(line => {\n            let originLine = {}\n            originLine.zone_id = line.zone_id\n            originLine.fields = []\n            line.fields.forEach(item => {\n              let tempObj = {}\n              tempObj.points = []\n              item.nodes.forEach(node => {\n                let nodeObj = {}\n                nodeObj.lng = node.longitude\n                nodeObj.lat = node.latitude\n                nodeObj.order = node.order\n                tempObj['points'].push(nodeObj)\n              })\n              tempObj.field_id = item.field_id\n              tempObj.lineColor = NORMAL_COLOR\n              originLine.fields.push(tempObj)\n            })\n            afterArr.push(originLine)\n          })\n          this.lines = afterArr\n          this.getAlarmFields()\n          console.log(\"this.lines\", this.lines)\n        }\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    defaultEndDate() {\n      var tmp = Date.parse(new Date()).toString();\n      tmp = tmp.substr(0,10);\n      return tmp;\n    },\n    defaultStartDate() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 7;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    defaultStartDate2() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 14;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    defaultStartDate3() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 30;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    // 获取地区数据\n    getAreaList() {\n      let params = {}\n      params.page = 1\n      params.limit = 1000\n      queryArea(params).then(res => {\n        if (res.retcode == 200) {\n          /* this.areaList = res.result\n          this.mapForm.area = this.areaList[0].area_id\n          if (this.areaList && this.areaList.length > 0) {\n            this.total = this.areaList.length\n          } */\n          res.result.some(item => {\n            if(item.area_id == this.defaultAreaId){\n              this.center.lng = item.longitude\n              this.center.lat = item.latitude\n              let params = {}\n              params.area_id = item.area_id;\n              queryAreaGps(params).then(res => {\n                if (res.retcode === 200 && res.result && res.result.length > 0) {\n                  //this.lineList = res.result[0].fields;\n                  //下拉框内容\n                  this.lineList = [];\n                  this.lineList.push({\"field_id\":\"全部\"})\n                  res.result[0].fields.forEach(f => {\n                      this.lineList.push({\"field_id\":f.field_id})\n                  })\n                  //线路图\n                  this.mapForm.line = this.lineList[0].field_id;\n                  this.lines2 = [];\n                  this.linePoint = [];\n                  res.result[0].fields.forEach(line => {\n                    this.buildMapLines(line);\n                  })\n                  return true;\n                }\n              })\n            }\n          })\n        }\n      })\n    },\n    buildMapLines(line) {\n      if(this.currentLine == \"全部\" || this.realTime || line.field_id == this.currentLine){\n        let tempObj = {}\n        tempObj.points = []\n        line.nodes.forEach(node => {\n          let nodeObj = {}\n          nodeObj.lng = node.longitude\n          nodeObj.lat = node.latitude\n          nodeObj.order = node.order\n          tempObj['points'].push(nodeObj)\n        })\n        tempObj.field_id = line.field_id\n        tempObj.lineColor = NORMAL_COLOR\n        this.lines2.push(tempObj)\n        //获取起点和终点\n        let startPoint = {};\n        startPoint.lng = line.nodes[0].longitude\n        startPoint.lat = line.nodes[0].latitude\n        startPoint.filedId = line.field_id\n        startPoint.type = \"start\"\n        startPoint.id = line.field_id + \"start\"\n        startPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELhIs.png\"\n        this.linePoint.push(startPoint);\n        let endPoint = {};\n        endPoint.lng = line.nodes[line.nodes.length-1].longitude\n        endPoint.lat = line.nodes[line.nodes.length-1].latitude\n        endPoint.filedId = line.field_id\n        endPoint.type = \"end\"\n        startPoint.id = line.field_id + \"end\"\n        endPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELgsS.png\"\n        this.linePoint.push(endPoint);\n      }\n    },\n    queryLineDetail() {\n      let now = new Date()\n      let nowStr = now.getFullYear() + '-' + (Number(now.getMonth()) + 1) + '-' + now.getDay() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n      let beforeStr = now.getFullYear() + '-' + (Number(now.getMonth()) + 1) + '-' + Number(now.getDay() - 7) + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n      queryLineDetail({ begin_time: '2020-8-1 00:00:00', end_time: '2020-8-10 00:00:00' }).then(res => {\n        if (res.retcode == 200 && res.result && res.result.length > 0) {\n          this.chart1Data.push(['amount', 'product'])\n          res.result.forEach(item => {\n            let temp = []\n            temp.push(item.total_count)\n            temp.push(item.name)\n            this.chart1Data.push(temp)\n            this.chargeCount += Number(item.total_deal)\n            this.disCount += Number(item.total_miss)\n          })\n        } else {\n          this.chart1Data = [\n            ['amount', 'product'],\n            [40, '示例一'],\n            [20, '示例二'],\n            [30, '示例三'],\n            [16, '示例四']\n          ]\n        }\n        this.initChart1()\n        this.initChart3()\n      })\n    },\n\n    getTableData() {\n      this.currentEndDate = this.defaultEndDate();\n      if(this.currentDate == 1){\n        this.currentStartDate = this.defaultStartDate();\n      }else if(this.currentDate == 2){\n        this.currentStartDate = this.defaultStartDate2();\n      }else if(this.currentDate == 3){\n        this.currentStartDate = this.defaultStartDate3();\n      }\n      let params = {}\n      params.page = 1\n      params.limit = 1000\n      params.begin_time = this.currentStartDate;\n      params.end_time = this.currentEndDate;\n      params.area_id = this.defaultAreaId;\n      queryAlarm(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.tableData = [];\n          this.alarmPoints = [];\n          res.result.forEach(it => {\n            if(it.field_id == this.currentLine || this.currentLine == \"全部\"){\n              this.tableData.push({\"field_id\":it.field_id,\"alarm_level\":it.alarm_level})\n              let alarmPoint = {};\n              alarmPoint.lng = it.longitude\n              alarmPoint.lat = it.latitude\n              alarmPoint.id = it.alarm_id\n              alarmPoint.type = \"alarm\"\n              if(it.alarm_level == \"严重告警\"){\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTa9g.png\"\n              }else if(it.alarm_level == \"中级告警\"){\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTwcj.png\"\n              }else{\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTd3Q.png\";\n              }\n              this.alarmPoints.push(alarmPoint);\n            }\n          })\n        }\n      })\n    },\n    getRealTableData() {\n      let params = {}\n      queryRealTimeAlarm(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.tableData = res.result\n          this.alarmPoints = [];\n          res.result.forEach(it => {\n            let alarmPoint = {};\n            alarmPoint.lng = it.longitude\n            alarmPoint.lat = it.latitude\n            alarmPoint.id = it.alarm_id\n            alarmPoint.type = \"alarm\"\n            if(it.alarm_level == \"严重告警\"){\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELfaj.gif\"\n            }else if(it.alarm_level == \"中级告警\"){\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELWZQ.gif\"\n            }else{\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/REL2qg.gif\";\n            }\n            this.alarmPoints.push(alarmPoint);\n          })\n        }\n      })\n    },\n    \n    getCenter() {\n      getMapCenter().then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.center = res.result\n        }\n      })\n    },\n    \n    getDeviceGps() {\n      queryDeviceGps().then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.polylinePath = res.result\n          this.polylinePath.forEach(item => {\n            item.lng = item.longitude\n            item.lat = item.latitude\n            item.id = item.device_id\n          })\n        }\n      })\n    },\n    getAlarmFields() {\n      getAlarmFields().then(res => {\n        if (res.retcode == 200 && res.result && res.result.length > 0) {\n          let result = res.result\n          let arr = []\n          // Object.keys(result).forEach(k => {\n          //   arr.push(result[k])\n          // })\n          result.forEach(zone => {\n            let field = {}\n            field.nodes = zone.node_list\n            field.nodes.forEach(node => {\n              node.lng = node.longitude\n              node.lat = node.latitude\n            })\n            field.zone = zone.zone\n            arr.push(field)\n          })\n          arr[0]['nodes'][1].lng = 120.243142000000\n          arr[0]['nodes'][1].lat = 30.227980000000\n          console.log('arr', arr)\n          this.alarmlines = arr\n        }\n      })\n    },\n    getAreaInfo() {\n      let params = {}\n      params.starttime = '2020-07-21 15:01:23'\n      params.endtime = '2020-07-28 15:01:23'\n      getAreaInfo(params).then(res => {\n        if (res.retcode === 200) {\n          // [52, '责任区'],\n          // [40, '设备数'],\n          // [30, '防区型'],\n          // [20, '定位型'],\n          // [40, '责任人']\n          let tempArr1 = []\n          tempArr1.push(res.zone_num || 0)\n          tempArr1.push('责任区')\n          let tempArr2 = []\n          tempArr2.push((res.gt_num + res.smt_num) || 0)\n          tempArr2.push('设备数')\n          let tempArr3 = []\n          tempArr3.push(res.smt_num || 0)\n          tempArr3.push('防区型')\n          let tempArr4 = []\n          tempArr4.push(res.gt_num || 0)\n          tempArr4.push('定位型')\n          let tempArr5 = []\n          tempArr5.push((res.zone_num * 2) || 0)\n          tempArr5.push('责任人')\n          this.areaData = [ ['amount', 'product'], tempArr1, tempArr2, tempArr3, tempArr4, tempArr5 ]\n          console.log('this.areaData', this.areaData)\n          setTimeout(() => {\n            this.initChart2()\n          }, 500)\n        }\n      })\n    },\n    gettTime() {\n      let time = new Date()\n      let timestr = time.toLocaleString()\n      this.time = timestr\n    },\n\n    handleShowDecInfo(id) {\n      getDeviceInfo({ id: id }).then(res => {\n        if (res.retcode === 200) {\n          if (!res.result) {\n            this.$message({ type: 'warning', message: '设备数据异常！' })\n          } else {\n            this.currentDev = res.result\n            this.infoType = 1\n            this.showWindow = true\n            this.$forceUpdate()\n          }\n        }\n      })\n    },\n    changeLine(val){\n      console.log(val);\n      this.currentLine = val;\n      let params = {}\n      params.area_id = this.defaultAreaId;\n      queryAreaGps(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.lines2 = [];\n          this.linePoint = [];\n          res.result[0].fields.forEach(line => {\n            this.buildMapLines(line);\n          })\n        }\n      })\n      this.getTableData();\n    },\n    changeTime(val){\n      console.log(val);\n      this.currentDate = val;\n      this.getTableData();\n    },\n    test(id) {\n      // this.info.height = event.screenY\n      // this.info.width = event.screenX\n      let params = {}\n      params.id = id\n      params.starttime = '2020-08-01 00:00:00'\n      params.endtime = '2020-08-10 00:00:00'\n      queryZoneInfo(params).then(res => {\n        if (res.retcode === 200) {\n          if (!res.result) {\n            this.$message({ type: 'warning', message: '线路数据异常！' })\n          } else {\n            this.currentZone = res.result\n            this.infoType = 0\n            this.showWindow = true\n            this.$forceUpdate()\n          }\n        }\n      })\n      // this.$refs['infoWindow'].style.left = event.pixel.x + 15 + 'px'\n      // this.$refs['infoWindow'].style.top = event.pixel.y - 205 + 'px'\n    },\n    handler ({BMap, map}) {\n      console.log('首页地图信息：', BMap, map)\n      this.center.lng = this.center.longitude\n      this.center.lat = this.center.latitude\n      this.zoom = 14\n      window.map = map;\n      map.ControlAnchor = 'BMAP_ANCHOR_TOP_LEFT'\n      map.enableAutoResize()\n    },\n    lineIn(str) {\n      //let tempArr = str.split('--')\n      //this.lines[tempArr[0]].fields[tempArr[1]].lineColor = '#e6a700'\n      this.lines2[str].lineColor = '#e6a700'\n    },\n    lineOut(str) {\n      //let tempArr = str.split('--')\n      //this.lines[tempArr[0]].fields[tempArr[1]].lineColor = '#23cefd'\n      this.lines2[str].lineColor = '#23cefd'\n    },\n    handleShowAreaInfo() {\n      this.showArea = !this.showArea\n    },\n\n    handleFullScreen(){\n      let element = this.$refs.doc\n      if (this.fullscreen) {\n          if (document.exitFullscreen) {\n              document.exitFullscreen();\n          } else if (document.webkitCancelFullScreen) {\n              document.webkitCancelFullScreen();\n          } else if (document.mozCancelFullScreen) {\n              document.mozCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n              document.msExitFullscreen();\n          }\n      } else {\n          if (element.requestFullscreen) {\n              element.requestFullscreen();\n          } else if (element.webkitRequestFullScreen) {\n              element.webkitRequestFullScreen();\n          } else if (element.mozRequestFullScreen) {\n              element.mozRequestFullScreen();\n          } else if (element.msRequestFullscreen) {\n              // IE11\n              element.msRequestFullscreen();\n          }\n      }\n      this.fullscreen = !this.fullscreen;\n    },\n\n    initChart2() {\n      this.chart2 = echarts.init(this.$refs.chart2)\n      this.chart2.setOption({\n          dataset: {\n              source: this.areaData\n          },\n          grid: {\n            top: \"50px\",\n            left: \"50px\",\n            bottom: \"10%\"\n          },\n          xAxis: {\n              type: 'value',\n              // name: '事件数',\n              color: \"#d6d2d2\",\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  }\n              },\n              axisLine: {\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              }\n          },\n          yAxis: {\n              type: 'category',\n              // name: '责任区名',\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  },\n                  width: '50px'\n              },\n              axisLine: {\n                  show: false,\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              },\n              nameTextStyle: {\n                width: \"50px\"\n              }\n          },\n          color: \"#23cefd\",\n          // grid: {containLabel: true},\n          series: [\n              {\n                  type: 'bar',\n                  encode: {\n                      // Map the \"amount\" column to X axis.\n                      x: 'amount',\n                      // Map the \"product\" column to Y axis\n                      y: 'product'\n                  },\n                  barWidth: 20\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart2.resize();\n      })\n    },\n\n    initChart3() {\n      this.chart3 = echarts.init(this.$refs.chart3)\n      this.chart3.setOption({\n          color:[\"#23cefd\", \"#61a0a8\"],\n          series: [\n              {\n                  name: '事件类型',\n                  type: 'pie',\n                  radius: ['40%', '55%'],\n                  center: ['50%', '60%'],\n                  label: {\n                      formatter: '{b|{b}}：\\n{hr|}\\n    {d|{d}}%   ',\n                      backgroundColor: 'rgba(0,0,0,0.2)',\n                      borderColor: '#aaa',\n                      borderWidth: 1,\n                      borderRadius: 4,\n                      // padding: [2, 7],\n                      rich: {\n                          b: {\n                              // color: '#999',\n                              lineHeight: 20,\n                              align: 'center',\n                          },\n                          d: {\n                            // color: '#999',\n                            lineHeight: 20,\n                            align: 'center'\n                          },\n                          hr: {\n                              borderColor: '#aaa',\n                              width: '100%',\n                              borderWidth: 0.5,\n                              height: 0\n                          },\n                      }\n                  },\n                  data: [\n                      {value: this.disCount || 10, name: '非管控中'},\n                      {value: this.chargeCount  || 10, name: '管控中'}\n                  ]\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart3.resize();\n      })\n    },\n\n    openSwitch(){\n      this.realTime = !this.realTime;\n      console.log(this.realTime)\n      if(this.realTime){\n        this.getAreaList() // 获取地区列表\n        this.getRealTableData();\n      }else{\n        this.getAreaList() // 获取地区列表\n        this.getTableData() // 获取事件列表数据\n      } \n    }\n  }\n}\n</script>\n\n<style scoped lang='less'>\n  .f-width {\n    width: 100%;\n  }\n\n  .f-height {\n    height: 100%;\n  }\n\n  .abs {\n    position: absolute;\n  }\n\n  .rel {\n    position: relative;\n  }\n\n\n  .gs-home-wrapper {\n    // background:url(../../assets/img/backimage.jpg) no-repeat;\n    .bg-img {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    }\n\n    .top-title {\n      height: 10%;\n      width: 100%;\n      position: absolute;\n      display: flex;\n\n      .top-left-wrapper {\n        width: 21%;\n        height: 30%;\n        position: absolute;\n        left: 1.2vw;\n        top: 5%;\n      }\n\n      .top-right-img {\n        width: 21%;\n        height: 30%;\n        right: 1.2vw;\n        top: 5%;\n      }\n\n      .top-mid-wrapper {\n        width: 64%;\n        height: 100%;\n        position: absolute;\n        left: 18%;\n\n        .title-content {\n          font-size: 1.5vw;\n          color: #23cefd;\n          text-align: center;\n          left: 0;\n          top: 15%;\n        }\n      }\n    }\n\n    .bottom-content {\n      height: 90%;\n      bottom: 0px;\n\n      .content-left {\n        width: 25%;\n        padding: 0 20px;\n\n        .content-left-top {\n          height: 18%;\n          margin-bottom: 1.5vh;\n        }\n\n        .content-left-mid {\n          height: 49.2%;\n          margin-bottom: 1.5vh;\n\n          .event-num-wrapper {\n            height: 15%;\n            top: 17%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding-right: 20px;\n\n            .event-num-words {\n              color: #23cefd;\n              font-size: 18px;\n            }\n\n            .event-num-content {\n              width: 50%;\n              height: 80%;\n              border: 1.5px solid #23cefd;\n              border-radius: 10px;\n              margin: 0 10px;\n              font-size: 2vw;\n              color: #23cefd;\n              text-align: center;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .bm-view {\n    padding: 10px;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 3;\n  }\n\n  .form-input {\n      width: 334px;\n      margin-right: 10px;\n  }\n\n  .gs-info-window-area {\n    position: absolute;\n    width: 430px;\n    height: 40px;\n    background: rgba(53, 199, 186, 0.85);\n    z-index: 1;\n    left: 10px;\n    top: 5px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n\n    .area-wrapper {\n      height: 40px;\n      width: 100%;\n      border-bottom: 1px solid #dfe6ec;\n      color: #f3f3f3;\n      font-size: 17px;\n      padding-left: 15px;\n      line-height: 40px;\n      position: relative;\n    }\n  }\n\n  .line-info-title {\n      height: 40px;\n      border-bottom: 1px solid rgb(35 206 253);\n\n      .title-detail {\n        padding-left: 8px;\n        line-height: 40px;\n      }\n    }\n\n  .line-info-content {\n      padding: 10px;\n\n      .content-detail {\n        margin-bottom: 5px;\n      }\n  }\n\n  .com-title-wrapper {\n    height: 30px;\n    width: 65%;\n    left: 10px;\n    top: 10px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    .com-title-content {\n      text-align: center;\n      width: 70%;\n      left: 0;\n      top: 5px;\n      color: #23cefd;\n    }\n  }\n\n  .map-select {\n    width: 70%;background: #121c35\n  }\n\n  .chart1 {\n    height:65%;\n    width:90%;\n    left: 20px;\n    bottom: 0;\n    z-index:2;\n  }\n\n  /deep/ .el-input__inner {\n    background: rgba(0,0,0,0.2);\n    border: 1px solid #0e7eb5;\n    color: #23cefd;\n  }\n\n  /deep/ .el-input__inner:hover {\n    border: 1px solid #0e7eb5 !important;\n  }\n\n  /deep/ .el-input__inner:focus {\n    border: 1px solid #0e7eb5 !important;\n  }\n\n .user_skills{\n   margin: auto;\n  }\n  .user_skills /deep/ .el-table--fit{\n      padding: 20px;\n  }\n  .user_skills /deep/  .el-table, .el-table__expanded-cell {\n      background-color: transparent;\n  }\n\n  .user_skills /deep/ .el-table tr {\n    color: #d6d2d2;\n    background-color: transparent!important;\n  }\n  .user_skills /deep/ .el-table th {\n    background-color: transparent!important;\n    color: #d6d2d2;\n    border-bottom: unset;\n  }\n  .user_skills /deep/ .el-table td {\n    color: #d6d2d2;\n    border-bottom: unset;\n  }\n  .user_skills /deep/  .el-table--enable-row-transition .el-table__body td, .el-table .cell{\n    background-color: transparent;\n  }\n  .el-table::before {//去除底部白线\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 0px;\n  }\n\n  @media screen and (max-width: 1320px) {\n    .gs-info-window-area {\n      top: 70px;\n    }\n}\n.switch-all{\n  position: absolute;\n  right: 40px;\n  top: 10px;\n  z-index:100; \n}\n.switch{\n    width: 2rem;\n    height: 1.1rem;\n    border-radius: 50px;\n    border: 1px solid #0671a8;\n    position: absolute;\n}\n.switch-btn{\n    width: 1.1rem;\n    height: 1.1rem;\n    border-radius: 50%;\n    border: 1px solid #021019;\n    position: absolute;\n    background-color: #00aeff;\n    top: -1px;\n    left: -1px;\n    transition:left .5s;\n    -moz-transition:left .5s; /* Firefox 4 */\n    -webkit-transition:left .5s; /* Safari and Chrome */\n    -o-transition:left .5s; /* Opera */\n}\n.switch-bg{\n    background-color: #104c74;\n    width: 1rem;\n    height: 1.1rem;\n    border-radius: 50px;\n    transition: width .5s;\n    -moz-transition: width .5s; /* Firefox 4 */\n    -webkit-transition:  width .5s; /* Safari and Chrome */\n}\n.switch-btn.on{\n    left: 1rem;\n}\n.switch-bg.on{\n    width: 2rem;\n}\n/*滚动条样式*/\n.scrollbar {\n  white-space: nowrap;\n  el-scrollbar {\n    display: flex;\n    justify-content: space-around;\n    padding: 0 10px;\n  }\n  .el-scrollbar__wrap {\n    overflow: scroll;\n    width: 110%;\n    height: 100%;\n  }\n\n}\n\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}