{"remainingRequest":"D:\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\hzgs-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hzgs-admin\\src\\views\\dashboard\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hzgs-admin\\src\\views\\dashboard\\index.vue","mtime":1624980094904},{"path":"D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hzgs-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHF1ZXJ5QXJlYSB9IGZyb20gJ0AvYXBpL2FyZWEvYXJlYS5qcyc7CmltcG9ydCB7IHF1ZXJ5QWxhcm0sIHF1ZXJ5UmVhbFRpbWVBbGFybSwgYWxlcnRXaGl0ZSB9IGZyb20gJ0AvYXBpL2FsYXJtL2FsYXJtLmpzJzsKaW1wb3J0IHsgcXVlcnlMaW5lRGV0YWlsIGFzIF9xdWVyeUxpbmVEZXRhaWwgfSBmcm9tICdAL2FwaS9saW5lL2xpbmUuanMnOwppbXBvcnQgeyBkZXZpY2VJbmZvIH0gZnJvbSAnQC9hcGkvZGV2aWNlL2RldmljZS5qcyc7CmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgeyBxdWVyeUFyZWFHcHMsIHF1ZXJ5RGV2aWNlR3BzLCBnZXRBcmVhSW5mbyBhcyBfZ2V0QXJlYUluZm8sIGdldE1hcENlbnRlciwgZ2V0RGV2aWNlSW5mbywgcXVlcnlab25lSW5mbywgZ2V0QWxhcm1GaWVsZHMgYXMgX2dldEFsYXJtRmllbGRzIH0gZnJvbSAnQC9hcGkvZGFzaGJvYXJkL2Rhc2hib2FyZC5qcyc7CmltcG9ydCBNb2RhbCBmcm9tICcuL21vZGFsLnZ1ZSc7CnZhciBOT1JNQUxfQ09MT1IgPSAnIzIzY2VmZCc7CnZhciBTUEVDSUFMX0NPTE9SID0gImJsYWNrIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEYXNoYm9hcmQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmdWxsc2NyZWVuOiBmYWxzZSwKICAgICAgdmFsdWUxOiAnJywKICAgICAgdGltZTogJycsCiAgICAgIHNob3dBcmVhOiB0cnVlLAogICAgICBjZW50ZXI6IHsKICAgICAgICBsbmc6IDEyMC4yMDMzNjUsCiAgICAgICAgbGF0OiAzMC4yMTE3ODQKICAgICAgfSwKICAgICAgem9vbTogOCwKICAgICAgcG9seWxpbmVQYXRoOiBbXSwKICAgICAgbGluZXM6IFtdLAogICAgICBsaW5lczI6IFtdLAogICAgICBsaW5lUG9pbnQ6IFtdLAogICAgICBhbGFybWxpbmVzOiBbXSwKICAgICAgbGluZUNvbG9yOiBbXSwKICAgICAgc2hvd1dpbmRvdzogZmFsc2UsCiAgICAgIG1hcEZvcm06IHsKICAgICAgICBhcmVhOiAn6K+36YCJ5oup5Yy65Z+fJywKICAgICAgICB0aW1lOiAn5LiA5ZGo5YaFJwogICAgICB9LAogICAgICBjdXJyZW50RGV2OiB7fSwKICAgICAgY3VycmVudFpvbmU6IHt9LAogICAgICBjdXJyZW50QWxhcm06IHt9LAogICAgICB3aGl0ZUxpc3RGb3JtOiB7fSwKICAgICAgaW5mb1R5cGU6ICcnLAogICAgICBhcmVhTGlzdDogW10sCiAgICAgIGxpbmVMaXN0OiBbXSwKICAgICAgZGVmYXVsdEFyZWFJZDogIjAwMDEiLAogICAgICBhbGFybVBvaW50czogW10sCiAgICAgIGN1cnJlbnRMaW5lOiAi5YWo6YOoIiwKICAgICAgY3VycmVudExpbmVJbmZvOiB7fSwKICAgICAgY3VycmVudERhdGU6IDEsCiAgICAgIGN1cnJlbnRTdGFydERhdGU6IHRoaXMuZGVmYXVsdFN0YXJ0RGF0ZSgpLAogICAgICBjdXJyZW50RW5kRGF0ZTogdGhpcy5kZWZhdWx0RW5kRGF0ZSgpLAogICAgICByZWFsVGltZTogdHJ1ZSwKICAgICAgYmxpbmtJbWc6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9pbWcvZ3JlZW5MaWdodC5wbmciKSwKICAgICAgbWFwU3R5bGU6IHsKICAgICAgICBmZWF0dXJlczogWyJyb2FkIiwgImJ1aWxkaW5nIiwgIndhdGVyIiwgImxhbmQiXSwKICAgICAgICAvL+makOiXj+WcsOWbvuS4iueahCJwb2kiLAogICAgICAgIHN0eWxlOiAibWlkbmlnaHQiIC8vIHZhciBzdHlsZV9tYXA9Wydub3JtYWwnLCdsaWdodCcsJ2RhcmsnLCdyZWRhbGVydCcsJ2dvb2dsZWxpdGUnLCdncmFzc2dyZWVuJywnbWlkbmlnaHQnLCdwaW5rJywnZGFya2dyZWVuJywnYmx1aXNoJywnZ3JheXNjYWxlJywnaGFyZGVkZ2UnXTsKICAgICAgICAvL+WIhuWIq+mjjuagvOaYr++8mum7mOiupOWcsOWbvuagt+W8j++8jOa4heaWsOiTnemjjuagvO+8jOm7keWknOmjjuagvO+8jOe6ouiJsuitpuaIkumjjuagvO+8jOeyvueugOmjjuagvO+8jOiHqueEtue7v+mjjuagvO+8jOWNiOWknOiTnemjjuagvO+8jOa1qua8q+eyiemjjuagvO+8jOmdkuaYpee7v+mjjuagvO+8jOa4heaWsOiTnee7v+mjjuagvO+8jOmrmOerr+eBsOmjjuagvO+8jOW8uui+ueeVjOmjjuagvAoKICAgICAgfSwKICAgICAgY2hhcnQxOiAnJywKICAgICAgY2hhcnQyOiAnJywKICAgICAgY2hhcnQzOiAnJywKICAgICAgY2hhcnQxRGF0YTogW10sCiAgICAgIG1vZGFsVGl0bGU6ICfliqDlhaXnmb3lkI3ljZUnLAogICAgICBzaG93TW9kYWw6IGZhbHNlLAogICAgICBkZXZpY2VNc2dUaXRsZTogIuiuvuWkh+aVhemanCIsCiAgICAgIHNob3dEZXZpY2VNc2c6IGZhbHNlLAogICAgICBpc0RldmljZUVycm9yOiBmYWxzZSwKICAgICAgZGV2aWNlRXJyb3JNc2c6ICLmraPluLjov5DooYwiLAogICAgICB0YWJsZURhdGE6IFt7CiAgICAgICAgZGF0ZTogJzIwMTYtMDUtMDInLAogICAgICAgIG5hbWU6ICfnjovlsI/omY4nLAogICAgICAgIGFkZHJlc3M6ICcyMDIwLzcvMjQnCiAgICAgIH0sIHsKICAgICAgICBkYXRlOiAnMjAxNi0wNS0wNCcsCiAgICAgICAgbmFtZTogJ+eOi+Wwj+iZjicsCiAgICAgICAgYWRkcmVzczogJzIwMjAvNy8yNCcKICAgICAgfSwgewogICAgICAgIGRhdGU6ICcyMDE2LTA1LTAxJywKICAgICAgICBuYW1lOiAn546L5bCP6JmOJywKICAgICAgICBhZGRyZXNzOiAnMjAyMC83LzI0JwogICAgICB9LCB7CiAgICAgICAgZGF0ZTogJzIwMTYtMDUtMDMnLAogICAgICAgIG5hbWU6ICfnjovlsI/omY4nLAogICAgICAgIGFkZHJlc3M6ICcyMDIwLzcvMjQnCiAgICAgIH0sIHsKICAgICAgICBkYXRlOiAnMjAxNi0wNS0wNCcsCiAgICAgICAgbmFtZTogJ+eOi+Wwj+iZjicsCiAgICAgICAgYWRkcmVzczogJzIwMjAvNy8yNCcKICAgICAgfSwgewogICAgICAgIGRhdGU6ICcyMDE2LTA1LTAxJywKICAgICAgICBuYW1lOiAn546L5bCP6JmOJywKICAgICAgICBhZGRyZXNzOiAnMjAyMC83LzI0JwogICAgICB9LCB7CiAgICAgICAgZGF0ZTogJzIwMTYtMDUtMDMnLAogICAgICAgIG5hbWU6ICfnjovlsI/omY4nLAogICAgICAgIGFkZHJlc3M6ICcyMDIwLzcvMjQnCiAgICAgIH0sIHsKICAgICAgICBkYXRlOiAnMjAxNi0wNS0wNCcsCiAgICAgICAgbmFtZTogJ+eOi+Wwj+iZjicsCiAgICAgICAgYWRkcmVzczogJzIwMjAvNy8yNCcKICAgICAgfSwgewogICAgICAgIGRhdGU6ICcyMDE2LTA1LTAxJywKICAgICAgICBuYW1lOiAn546L5bCP6JmOJywKICAgICAgICBhZGRyZXNzOiAnMjAyMC83LzI0JwogICAgICB9LCB7CiAgICAgICAgZGF0ZTogJzIwMTYtMDUtMDMnLAogICAgICAgIG5hbWU6ICfnjovlsI/omY4nLAogICAgICAgIGFkZHJlc3M6ICcyMDIwLzcvMjQnCiAgICAgIH1dCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgTW9kYWw6IE1vZGFsCiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy90aGlzLmdldEluZm8oKQogICAgdGhpcy5nZXREZXZpY2VHcHMoKTsgLy90aGlzLmdldENlbnRlcigpIC8vIOiOt+WPluWcsOWbvuWdkOagh+S4ree6v+eCuQogICAgLy90aGlzLmdldEFyZWFJbmZvKCkgLy8g5Yy65Z+f57uf6K6h5L+h5oGvCgogICAgdGhpcy5nZXRBcmVhTGlzdCgpOyAvLyDojrflj5blnLDljLrliJfooagKICAgIC8vIOiOt+WPluS6i+S7tuWIl+ihqOaVsOaNrgoKICAgIGlmICh0aGlzLnJlYWxUaW1lKSB7CiAgICAgIHRoaXMuZ2V0UmVhbFRhYmxlRGF0YSgpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5nZXRUYWJsZURhdGEoKTsKICAgIH0KCiAgICB0aGlzLnF1ZXJ5TGluZURldGFpbCgpOyAvLyDojrflj5bmiYDmnInotKPku7vljLrnmoTlkYrorabkuovku7YKCiAgICB0aGlzLnRpbWUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIGlmIChfdGhpcy5yZWFsVGltZSkgewogICAgICAgIF90aGlzLmdldFJlYWxUYWJsZURhdGEoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfdGhpcy5nZXRUYWJsZURhdGEoKTsKICAgICAgfQogICAgfSwgMTAwMCAqIDYwKTsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsvL3RoaXMuZ2V0QWxhcm1GaWVsZHMoKQogICAgfSwgNTAwMCk7CiAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmdldHRUaW1lKCk7CiAgICB9LCAxMDAwKTsKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuZ2V0RGV2aWNlSW5mbygpOyAvL+iOt+WPluiuvuWkh+eKtuaAgQoKCiAgICAgIF90aGlzLnNob3dCbGluaygpOyAvL+S6rueBrwoKICAgIH0sIDEwMDApOyAvL+iuvuWkh+aVhemanOaXtuWNgeWIhumSn+aPkOmGkuS4gOasoQoKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKF90aGlzLmlzRGV2aWNlRXJyb3IpIHsKICAgICAgICBfdGhpcy5zaG93RGV2aWNlTXNnID0gdHJ1ZTsKICAgICAgfQogICAgfSwgMTAwMCAqIDYwICogMTApOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFsYXJtQ291bnQ6IGZ1bmN0aW9uIGFsYXJtQ291bnQoKSB7CiAgICAgIHZhciBjb3VudCA9IDA7CiAgICAgIHRoaXMuY2hhcnQxRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgIGlmIChpbmRleCA+IDApIHsKICAgICAgICAgIGNvdW50ICs9IE51bWJlcihpdGVtWzBdKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gY291bnQ7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQxOiBmdW5jdGlvbiBpbml0Q2hhcnQxKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuY2hhcnQxID0gZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuY2hhcnQxKTsKICAgICAgdGhpcy5jaGFydDEuc2V0T3B0aW9uKHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgc2hvdzogInRydWUiLAogICAgICAgICAgdGV4dDogIuWQhOi0o+S7u+WMuuS6i+S7tue7n+iuoSIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgLy/kuLvmoIfpopjmlofmnKzmoLflvI97ImZvbnRTaXplIjogMTgsImZvbnRXZWlnaHQiOiAiYm9sZGVyIiwiY29sb3IiOiAiIzMzMyJ9CiAgICAgICAgICAgIC8vIGZvbnRGYW1pbHk6ICdBcmlhbCwgVmVyZGFuYSwgc2Fucy4uLicsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNiwKICAgICAgICAgICAgLy8gZm9udFN0eWxlOiAnbm9ybWFsJywKICAgICAgICAgICAgLy8gZm9udFdlaWdodDogJ25vcm1hbCcsCiAgICAgICAgICAgIGNvbG9yOiAiI2Q2ZDJkMiIKICAgICAgICAgIH0sCiAgICAgICAgICB0b3A6ICIwcHgiLAogICAgICAgICAgbGVmdDogIjglIgogICAgICAgIH0sCiAgICAgICAgZGF0YXNldDogewogICAgICAgICAgc291cmNlOiB0aGlzLmNoYXJ0MURhdGEKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogIjE1JSIsCiAgICAgICAgICBsZWZ0OiAiNDBweCIsCiAgICAgICAgICBib3R0b206ICIxNy41JSIKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgLy8gbmFtZTogJ+S6i+S7tuaVsCcsCiAgICAgICAgICBjb2xvcjogIiNkNmQyZDIiLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgLy8gZGF0YTogWyfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrScsICfkuIMnLCAn5YWrJywgJ+S5nSddLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2Q2ZDJkMicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicgLy8g6aKc6ImyCgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIC8vIG5hbWU6ICfotKPku7vljLrlkI0nLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgLy8gZGF0YTogWyfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrScsICfkuIMnLCAn5YWrJywgJ+S5nSddLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2Q2ZDJkMicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgd2lkdGg6ICc1MHB4JwogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnIC8vIOminOiJsgoKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgd2lkdGg6ICI1MHB4IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY29sb3I6ICIjMjNjZWZkIiwKICAgICAgICAvLyBncmlkOiB7Y29udGFpbkxhYmVsOiB0cnVlfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGVuY29kZTogewogICAgICAgICAgICAvLyBNYXAgdGhlICJhbW91bnQiIGNvbHVtbiB0byBYIGF4aXMuCiAgICAgICAgICAgIHg6ICdhbW91bnQnLAogICAgICAgICAgICAvLyBNYXAgdGhlICJwcm9kdWN0IiBjb2x1bW4gdG8gWSBheGlzCiAgICAgICAgICAgIHk6ICdwcm9kdWN0JwogICAgICAgICAgfSwKICAgICAgICAgIGJhcldpZHRoOiAyMAogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jaGFydDEucmVzaXplKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPlkdQU+aVsOaNrgogICAgZ2V0SW5mbzogZnVuY3Rpb24gZ2V0SW5mbygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgcXVlcnlBcmVhR3BzKHRoaXMucXVlcnlGb3JtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCAmJiByZXMucmVzdWx0ICYmIHJlcy5yZXN1bHQubGVuZ3RoID4gMCkgewogICAgICAgICAgdmFyIG9yaWdpbkFyciA9IHJlcy5yZXN1bHQ7IC8vIOaJgOaciei0o+S7u+WMuu+8iOWQq2lk77yJCgogICAgICAgICAgdmFyIGFmdGVyQXJyID0gW107IC8vIOaVsOaNruWkhOeQhumHjee7hO+8jOacgOWGheWxgua3u+WKoOe6v+adoeminOiJsuWtl+autQoKICAgICAgICAgIG9yaWdpbkFyci5mb3JFYWNoKGZ1bmN0aW9uIChsaW5lKSB7CiAgICAgICAgICAgIHZhciBvcmlnaW5MaW5lID0ge307CiAgICAgICAgICAgIG9yaWdpbkxpbmUuem9uZV9pZCA9IGxpbmUuem9uZV9pZDsKICAgICAgICAgICAgb3JpZ2luTGluZS5maWVsZHMgPSBbXTsKICAgICAgICAgICAgbGluZS5maWVsZHMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHZhciB0ZW1wT2JqID0ge307CiAgICAgICAgICAgICAgdGVtcE9iai5wb2ludHMgPSBbXTsKICAgICAgICAgICAgICBpdGVtLm5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgICAgICAgIHZhciBub2RlT2JqID0ge307CiAgICAgICAgICAgICAgICBub2RlT2JqLmxuZyA9IG5vZGUubG9uZ2l0dWRlOwogICAgICAgICAgICAgICAgbm9kZU9iai5sYXQgPSBub2RlLmxhdGl0dWRlOwogICAgICAgICAgICAgICAgbm9kZU9iai5vcmRlciA9IG5vZGUub3JkZXI7CiAgICAgICAgICAgICAgICB0ZW1wT2JqWydwb2ludHMnXS5wdXNoKG5vZGVPYmopOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRlbXBPYmouZmllbGRfaWQgPSBpdGVtLmZpZWxkX2lkOwogICAgICAgICAgICAgIHRlbXBPYmoubGluZUNvbG9yID0gTk9STUFMX0NPTE9SOwogICAgICAgICAgICAgIG9yaWdpbkxpbmUuZmllbGRzLnB1c2godGVtcE9iaik7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBhZnRlckFyci5wdXNoKG9yaWdpbkxpbmUpOwogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpczMubGluZXMgPSBhZnRlckFycjsKCiAgICAgICAgICBfdGhpczMuZ2V0QWxhcm1GaWVsZHMoKTsKCiAgICAgICAgICBjb25zb2xlLmxvZygidGhpcy5saW5lcyIsIF90aGlzMy5saW5lcyk7CiAgICAgICAgfSAvLyBKdXN0IHRvIHNpbXVsYXRlIHRoZSB0aW1lIG9mIHRoZSByZXF1ZXN0CgoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0sIDEgKiAxMDAwKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVmYXVsdEVuZERhdGU6IGZ1bmN0aW9uIGRlZmF1bHRFbmREYXRlKCkgewogICAgICB2YXIgdG1wID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKS50b1N0cmluZygpOwogICAgICB0bXAgPSB0bXAuc3Vic3RyKDAsIDEwKTsKICAgICAgcmV0dXJuIHRtcDsKICAgIH0sCiAgICBkZWZhdWx0U3RhcnREYXRlOiBmdW5jdGlvbiBkZWZhdWx0U3RhcnREYXRlKCkgewogICAgICB2YXIgdG1wID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKTsKICAgICAgdG1wID0gdG1wIC0gMTAwMCAqIDYwICogNjAgKiAyNCAqIDc7CiAgICAgIHRtcCA9IHRtcC50b1N0cmluZygpLnN1YnN0cigwLCAxMCk7CiAgICAgIHJldHVybiB0bXA7CiAgICB9LAogICAgZGVmYXVsdFN0YXJ0RGF0ZTI6IGZ1bmN0aW9uIGRlZmF1bHRTdGFydERhdGUyKCkgewogICAgICB2YXIgdG1wID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKTsKICAgICAgdG1wID0gdG1wIC0gMTAwMCAqIDYwICogNjAgKiAyNCAqIDE0OwogICAgICB0bXAgPSB0bXAudG9TdHJpbmcoKS5zdWJzdHIoMCwgMTApOwogICAgICByZXR1cm4gdG1wOwogICAgfSwKICAgIGRlZmF1bHRTdGFydERhdGUzOiBmdW5jdGlvbiBkZWZhdWx0U3RhcnREYXRlMygpIHsKICAgICAgdmFyIHRtcCA9IERhdGUucGFyc2UobmV3IERhdGUoKSk7CiAgICAgIHRtcCA9IHRtcCAtIDEwMDAgKiA2MCAqIDYwICogMjQgKiAzMDsKICAgICAgdG1wID0gdG1wLnRvU3RyaW5nKCkuc3Vic3RyKDAsIDEwKTsKICAgICAgcmV0dXJuIHRtcDsKICAgIH0sCiAgICAvLyDojrflj5blnLDljLrmlbDmja4KICAgIGdldEFyZWFMaXN0OiBmdW5jdGlvbiBnZXRBcmVhTGlzdCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0ge307CiAgICAgIHBhcmFtcy5wYWdlID0gMTsKICAgICAgcGFyYW1zLmxpbWl0ID0gMTAwMDsKICAgICAgcXVlcnlBcmVhKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5yZXRjb2RlID09IDIwMCkgewogICAgICAgICAgLyogdGhpcy5hcmVhTGlzdCA9IHJlcy5yZXN1bHQKICAgICAgICAgIHRoaXMubWFwRm9ybS5hcmVhID0gdGhpcy5hcmVhTGlzdFswXS5hcmVhX2lkCiAgICAgICAgICBpZiAodGhpcy5hcmVhTGlzdCAmJiB0aGlzLmFyZWFMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgdGhpcy50b3RhbCA9IHRoaXMuYXJlYUxpc3QubGVuZ3RoCiAgICAgICAgICB9ICovCiAgICAgICAgICByZXMucmVzdWx0LnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgaWYgKGl0ZW0uYXJlYV9pZCA9PSBfdGhpczQuZGVmYXVsdEFyZWFJZCkgewogICAgICAgICAgICAgIF90aGlzNC5jZW50ZXIubG5nID0gaXRlbS5sb25naXR1ZGU7CiAgICAgICAgICAgICAgX3RoaXM0LmNlbnRlci5sYXQgPSBpdGVtLmxhdGl0dWRlOwogICAgICAgICAgICAgIHZhciBfcGFyYW1zID0ge307CiAgICAgICAgICAgICAgX3BhcmFtcy5hcmVhX2lkID0gaXRlbS5hcmVhX2lkOwogICAgICAgICAgICAgIHF1ZXJ5QXJlYUdwcyhfcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChyZXMucmV0Y29kZSA9PT0gMjAwICYmIHJlcy5yZXN1bHQgJiYgcmVzLnJlc3VsdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgIC8vdGhpcy5saW5lTGlzdCA9IHJlcy5yZXN1bHRbMF0uZmllbGRzOwogICAgICAgICAgICAgICAgICAvL+S4i+aLieahhuWGheWuuQogICAgICAgICAgICAgICAgICBfdGhpczQubGluZUxpc3QgPSBbXTsKCiAgICAgICAgICAgICAgICAgIF90aGlzNC5saW5lTGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAiZmllbGRfaWQiOiAi5YWo6YOoIgogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgIHJlcy5yZXN1bHRbMF0uZmllbGRzLmZvckVhY2goZnVuY3Rpb24gKGYpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQubGluZUxpc3QucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAiZmllbGRfaWQiOiBmLmZpZWxkX2lkCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOyAvL+e6v+i3r+WbvgoKICAgICAgICAgICAgICAgICAgX3RoaXM0Lm1hcEZvcm0ubGluZSA9IF90aGlzNC5jdXJyZW50TGluZTsKICAgICAgICAgICAgICAgICAgX3RoaXM0LmxpbmVzMiA9IFtdOwogICAgICAgICAgICAgICAgICBfdGhpczQubGluZVBvaW50ID0gW107CiAgICAgICAgICAgICAgICAgIHJlcy5yZXN1bHRbMF0uZmllbGRzLmZvckVhY2goZnVuY3Rpb24gKGxpbmUpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQuYnVpbGRNYXBMaW5lcyhsaW5lKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGJ1aWxkTWFwTGluZXM6IGZ1bmN0aW9uIGJ1aWxkTWFwTGluZXMobGluZSkgewogICAgICBpZiAodGhpcy5jdXJyZW50TGluZSA9PSAi5YWo6YOoIiB8fCB0aGlzLnJlYWxUaW1lIHx8IGxpbmUuZmllbGRfaWQgPT0gdGhpcy5jdXJyZW50TGluZSkgewogICAgICAgIHZhciB0ZW1wT2JqID0ge307CiAgICAgICAgdGVtcE9iai5wb2ludHMgPSBbXTsKICAgICAgICBsaW5lLm5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIHZhciBub2RlT2JqID0ge307CiAgICAgICAgICBub2RlT2JqLmxuZyA9IG5vZGUubG9uZ2l0dWRlOwogICAgICAgICAgbm9kZU9iai5sYXQgPSBub2RlLmxhdGl0dWRlOwogICAgICAgICAgbm9kZU9iai5vcmRlciA9IG5vZGUub3JkZXI7CiAgICAgICAgICB0ZW1wT2JqWydwb2ludHMnXS5wdXNoKG5vZGVPYmopOwogICAgICAgIH0pOwogICAgICAgIHRlbXBPYmouZmllbGRfaWQgPSBsaW5lLmZpZWxkX2lkOwogICAgICAgIHRlbXBPYmoubmFtZSA9IGxpbmUuZmllbGRfbmFtZTsKICAgICAgICB0ZW1wT2JqLmhlYWQxID0gbGluZS5oZWFkMTsKICAgICAgICB0ZW1wT2JqLnBob25lMSA9IGxpbmUucGhvbmUxOwogICAgICAgIHRlbXBPYmouaGVhZDIgPSBsaW5lLmhlYWQyOwogICAgICAgIHRlbXBPYmoucGhvbmUyID0gbGluZS5waG9uZTI7CiAgICAgICAgdGVtcE9iai5saW5lQ29sb3IgPSBOT1JNQUxfQ09MT1I7CiAgICAgICAgdGhpcy5saW5lczIucHVzaCh0ZW1wT2JqKTsgLy/ojrflj5botbfngrnlkoznu4jngrkKCiAgICAgICAgaWYgKHRoaXMubGluZVBvaW50Lmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAvL+i1t+eCueWPquimgeS4gOS4qgogICAgICAgICAgdmFyIHN0YXJ0UG9pbnQgPSB7fTsKICAgICAgICAgIHN0YXJ0UG9pbnQubG5nID0gbGluZS5ub2Rlc1swXS5sb25naXR1ZGU7CiAgICAgICAgICBzdGFydFBvaW50LmxhdCA9IGxpbmUubm9kZXNbMF0ubGF0aXR1ZGU7CiAgICAgICAgICBzdGFydFBvaW50LmZpbGVkSWQgPSBsaW5lLmZpZWxkX2lkOwogICAgICAgICAgc3RhcnRQb2ludC50eXBlID0gInN0YXJ0IjsKICAgICAgICAgIHN0YXJ0UG9pbnQuaWQgPSBsaW5lLmZpZWxkX2lkICsgInN0YXJ0IjsKICAgICAgICAgIHN0YXJ0UG9pbnQuaWNvbiA9ICJodHRwczovL3ozLmF4MXguY29tLzIwMjEvMDYvMjEvUkVMaElzLnBuZyI7CiAgICAgICAgICB0aGlzLmxpbmVQb2ludC5wdXNoKHN0YXJ0UG9pbnQpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGVuZFBvaW50ID0ge307CiAgICAgICAgZW5kUG9pbnQubG5nID0gbGluZS5ub2Rlc1tsaW5lLm5vZGVzLmxlbmd0aCAtIDFdLmxvbmdpdHVkZTsKICAgICAgICBlbmRQb2ludC5sYXQgPSBsaW5lLm5vZGVzW2xpbmUubm9kZXMubGVuZ3RoIC0gMV0ubGF0aXR1ZGU7CiAgICAgICAgZW5kUG9pbnQuZmlsZWRJZCA9IGxpbmUuZmllbGRfaWQ7CiAgICAgICAgZW5kUG9pbnQudHlwZSA9ICJlbmQiOwogICAgICAgIGVuZFBvaW50LmlkID0gbGluZS5maWVsZF9pZCArICJlbmQiOwogICAgICAgIGVuZFBvaW50Lmljb24gPSAiaHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzA2LzIxL1JFTGdzUy5wbmciOwogICAgICAgIHRoaXMubGluZVBvaW50LnB1c2goZW5kUG9pbnQpOwogICAgICB9CiAgICB9LAogICAgcXVlcnlMaW5lRGV0YWlsOiBmdW5jdGlvbiBxdWVyeUxpbmVEZXRhaWwoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHZhciBub3dTdHIgPSBub3cuZ2V0RnVsbFllYXIoKSArICctJyArIChOdW1iZXIobm93LmdldE1vbnRoKCkpICsgMSkgKyAnLScgKyBub3cuZ2V0RGF5KCkgKyAnICcgKyBub3cuZ2V0SG91cnMoKSArICc6JyArIG5vdy5nZXRNaW51dGVzKCkgKyAnOicgKyBub3cuZ2V0U2Vjb25kcygpOwogICAgICB2YXIgYmVmb3JlU3RyID0gbm93LmdldEZ1bGxZZWFyKCkgKyAnLScgKyAoTnVtYmVyKG5vdy5nZXRNb250aCgpKSArIDEpICsgJy0nICsgTnVtYmVyKG5vdy5nZXREYXkoKSAtIDcpICsgJyAnICsgbm93LmdldEhvdXJzKCkgKyAnOicgKyBub3cuZ2V0TWludXRlcygpICsgJzonICsgbm93LmdldFNlY29uZHMoKTsKCiAgICAgIF9xdWVyeUxpbmVEZXRhaWwoewogICAgICAgIGJlZ2luX3RpbWU6ICcyMDIwLTgtMSAwMDowMDowMCcsCiAgICAgICAgZW5kX3RpbWU6ICcyMDIwLTgtMTAgMDA6MDA6MDAnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMucmV0Y29kZSA9PSAyMDAgJiYgcmVzLnJlc3VsdCAmJiByZXMucmVzdWx0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgIF90aGlzNS5jaGFydDFEYXRhLnB1c2goWydhbW91bnQnLCAncHJvZHVjdCddKTsKCiAgICAgICAgICByZXMucmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgdmFyIHRlbXAgPSBbXTsKICAgICAgICAgICAgdGVtcC5wdXNoKGl0ZW0udG90YWxfY291bnQpOwogICAgICAgICAgICB0ZW1wLnB1c2goaXRlbS5uYW1lKTsKCiAgICAgICAgICAgIF90aGlzNS5jaGFydDFEYXRhLnB1c2godGVtcCk7CgogICAgICAgICAgICBfdGhpczUuY2hhcmdlQ291bnQgKz0gTnVtYmVyKGl0ZW0udG90YWxfZGVhbCk7CiAgICAgICAgICAgIF90aGlzNS5kaXNDb3VudCArPSBOdW1iZXIoaXRlbS50b3RhbF9taXNzKTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczUuY2hhcnQxRGF0YSA9IFtbJ2Ftb3VudCcsICdwcm9kdWN0J10sIFs0MCwgJ+ekuuS+i+S4gCddLCBbMjAsICfnpLrkvovkuownXSwgWzMwLCAn56S65L6L5LiJJ10sIFsxNiwgJ+ekuuS+i+WbmyddXTsKICAgICAgICB9IC8vdGhpcy5pbml0Q2hhcnQxKCkKICAgICAgICAvL3RoaXMuaW5pdENoYXJ0MygpCgogICAgICB9KTsKICAgIH0sCiAgICBnZXRUYWJsZURhdGE6IGZ1bmN0aW9uIGdldFRhYmxlRGF0YSgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB0aGlzLmN1cnJlbnRFbmREYXRlID0gdGhpcy5kZWZhdWx0RW5kRGF0ZSgpOwoKICAgICAgaWYgKHRoaXMuY3VycmVudERhdGUgPT0gMSkgewogICAgICAgIHRoaXMuY3VycmVudFN0YXJ0RGF0ZSA9IHRoaXMuZGVmYXVsdFN0YXJ0RGF0ZSgpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudERhdGUgPT0gMikgewogICAgICAgIHRoaXMuY3VycmVudFN0YXJ0RGF0ZSA9IHRoaXMuZGVmYXVsdFN0YXJ0RGF0ZTIoKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlbnREYXRlID09IDMpIHsKICAgICAgICB0aGlzLmN1cnJlbnRTdGFydERhdGUgPSB0aGlzLmRlZmF1bHRTdGFydERhdGUzKCk7CiAgICAgIH0KCiAgICAgIHZhciBwYXJhbXMgPSB7fTsKICAgICAgcGFyYW1zLnBhZ2UgPSAxOwogICAgICBwYXJhbXMubGltaXQgPSAxMDAwOwogICAgICBwYXJhbXMuYmVnaW5fdGltZSA9IHRoaXMuY3VycmVudFN0YXJ0RGF0ZTsKICAgICAgcGFyYW1zLmVuZF90aW1lID0gdGhpcy5jdXJyZW50RW5kRGF0ZTsKICAgICAgcGFyYW1zLmFyZWFfaWQgPSB0aGlzLmRlZmF1bHRBcmVhSWQ7CiAgICAgIHF1ZXJ5QWxhcm0ocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCAmJiByZXMucmVzdWx0ICYmIHJlcy5yZXN1bHQubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXM2LnRhYmxlRGF0YSA9IFtdOwogICAgICAgICAgX3RoaXM2LmFsYXJtUG9pbnRzID0gW107CiAgICAgICAgICByZXMucmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKGl0KSB7CiAgICAgICAgICAgIGlmIChpdC5maWVsZF9pZCA9PSBfdGhpczYuY3VycmVudExpbmUgfHwgX3RoaXM2LmN1cnJlbnRMaW5lID09ICLlhajpg6giKSB7CiAgICAgICAgICAgICAgX3RoaXM2LnRhYmxlRGF0YS5wdXNoKHsKICAgICAgICAgICAgICAgICJmaWVsZF9pZCI6IGl0LmZpZWxkX2lkLAogICAgICAgICAgICAgICAgImFsYXJtX2xldmVsIjogaXQuYWxhcm1fbGV2ZWwKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgdmFyIGFsYXJtUG9pbnQgPSB7fTsKICAgICAgICAgICAgICBhbGFybVBvaW50LmxuZyA9IGl0LmxvbmdpdHVkZTsKICAgICAgICAgICAgICBhbGFybVBvaW50LmxhdCA9IGl0LmxhdGl0dWRlOwogICAgICAgICAgICAgIGFsYXJtUG9pbnQuaWQgPSBpdC5pZDsKICAgICAgICAgICAgICBhbGFybVBvaW50LnR5cGUgPSAiYWxhcm0iOwogICAgICAgICAgICAgIGFsYXJtUG9pbnQubGV2ZWwgPSBpdC5hbGFybV9sZXZlbDsKICAgICAgICAgICAgICBhbGFybVBvaW50LmJlZ2luVGltZSA9IGl0LmJlZ2luX3RpbWU7CiAgICAgICAgICAgICAgYWxhcm1Qb2ludC5lbmRUaW1lID0gaXQuZW5kX3RpbWU7CiAgICAgICAgICAgICAgYWxhcm1Qb2ludC5wb3NpdGlvbiA9IGl0LnBvc2l0aW9uOwogICAgICAgICAgICAgIGFsYXJtUG9pbnQuYWxhcm1UeXBlID0gaXQuYWxhcm1fdHlwZTsKICAgICAgICAgICAgICBhbGFybVBvaW50LmNvbnRpbnVlVGltZSA9IGl0LmNvbnRpbnVlX3RpbWU7CiAgICAgICAgICAgICAgYWxhcm1Qb2ludC5maWVsZElkID0gaXQuZmllbGRfaWQ7CgogICAgICAgICAgICAgIGlmIChpdC5hbGFybV9sZXZlbCA9PSAi5Lil6YeN5ZGK6K2mIikgewogICAgICAgICAgICAgICAgYWxhcm1Qb2ludC5pY29uID0gImh0dHBzOi8vejMuYXgxeC5jb20vMjAyMS8wNi8yMC9SRlRhOWcucG5nIjsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKGl0LmFsYXJtX2xldmVsID09ICLkuK3nuqflkYroraYiKSB7CiAgICAgICAgICAgICAgICBhbGFybVBvaW50Lmljb24gPSAiaHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzA2LzIwL1JGVHdjai5wbmciOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBhbGFybVBvaW50Lmljb24gPSAiaHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzA2LzIwL1JGVGQzUS5wbmciOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3RoaXM2LmFsYXJtUG9pbnRzLnB1c2goYWxhcm1Qb2ludCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0UmVhbFRhYmxlRGF0YTogZnVuY3Rpb24gZ2V0UmVhbFRhYmxlRGF0YSgpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0ge307CiAgICAgIHF1ZXJ5UmVhbFRpbWVBbGFybShwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMucmV0Y29kZSA9PT0gMjAwICYmIHJlcy5yZXN1bHQgJiYgcmVzLnJlc3VsdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICBfdGhpczcudGFibGVEYXRhID0gcmVzLnJlc3VsdDsKICAgICAgICAgIF90aGlzNy5hbGFybVBvaW50cyA9IFtdOwogICAgICAgICAgcmVzLnJlc3VsdC5mb3JFYWNoKGZ1bmN0aW9uIChpdCkgewogICAgICAgICAgICB2YXIgYWxhcm1Qb2ludCA9IHt9OwogICAgICAgICAgICBhbGFybVBvaW50LmxuZyA9IGl0LmxvbmdpdHVkZTsKICAgICAgICAgICAgYWxhcm1Qb2ludC5sYXQgPSBpdC5sYXRpdHVkZTsKICAgICAgICAgICAgYWxhcm1Qb2ludC5pZCA9IGl0LmlkOwogICAgICAgICAgICBhbGFybVBvaW50LnR5cGUgPSAiYWxhcm0iOwogICAgICAgICAgICBhbGFybVBvaW50LmxldmVsID0gaXQuYWxhcm1fbGV2ZWw7CiAgICAgICAgICAgIGFsYXJtUG9pbnQuYmVnaW5UaW1lID0gaXQuYmVnaW5fdGltZTsKICAgICAgICAgICAgYWxhcm1Qb2ludC5hc3NpZ25lZU5hbWUgPSBpdC5uYW1lOwogICAgICAgICAgICBhbGFybVBvaW50LmFzc2lnbmVlUGhvbmUgPSBpdC5waG9uZTsKICAgICAgICAgICAgYWxhcm1Qb2ludC5maWVsZElkID0gaXQuZmllbGRfaWQ7CgogICAgICAgICAgICBpZiAoaXQuYWxhcm1fbGV2ZWwgPT0gIuS4pemHjeWRiuitpiIpIHsKICAgICAgICAgICAgICBhbGFybVBvaW50Lmljb24gPSAiaHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzA2LzIxL1JFTGZhai5naWYiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGl0LmFsYXJtX2xldmVsID09ICLkuK3nuqflkYroraYiKSB7CiAgICAgICAgICAgICAgYWxhcm1Qb2ludC5pY29uID0gImh0dHBzOi8vejMuYXgxeC5jb20vMjAyMS8wNi8yMS9SRUxXWlEuZ2lmIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBhbGFybVBvaW50Lmljb24gPSAiaHR0cHM6Ly96My5heDF4LmNvbS8yMDIxLzA2LzIxL1JFTDJxZy5naWYiOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfdGhpczcuYWxhcm1Qb2ludHMucHVzaChhbGFybVBvaW50KTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q2VudGVyOiBmdW5jdGlvbiBnZXRDZW50ZXIoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgZ2V0TWFwQ2VudGVyKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5yZXRjb2RlID09PSAyMDAgJiYgcmVzLnJlc3VsdCAmJiByZXMucmVzdWx0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgIF90aGlzOC5jZW50ZXIgPSByZXMucmVzdWx0OwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0RGV2aWNlR3BzOiBmdW5jdGlvbiBnZXREZXZpY2VHcHMoKSB7CiAgICAgIHZhciBfdGhpczkgPSB0aGlzOwoKICAgICAgcXVlcnlEZXZpY2VHcHMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCAmJiByZXMucmVzdWx0ICYmIHJlcy5yZXN1bHQubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXM5LnBvbHlsaW5lUGF0aCA9IHJlcy5yZXN1bHQ7CgogICAgICAgICAgX3RoaXM5LnBvbHlsaW5lUGF0aC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIGl0ZW0ubG5nID0gaXRlbS5sb25naXR1ZGU7CiAgICAgICAgICAgIGl0ZW0ubGF0ID0gaXRlbS5sYXRpdHVkZTsKICAgICAgICAgICAgaXRlbS5pZCA9IGl0ZW0uZGV2aWNlX2lkOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXREZXZpY2VJbmZvOiBmdW5jdGlvbiBnZXREZXZpY2VJbmZvKCkgewogICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7CgogICAgICBkZXZpY2VJbmZvKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgZGVidWdnZXI7CgogICAgICAgIGlmIChyZXMucmV0Y29kZSA9PT0gMjAwICYmIHJlcy5yZXN1bHQgJiYgcmVzLnJlc3VsdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICBfdGhpczEwLmRldmljZUVycm9yTXNnID0gIiI7CiAgICAgICAgICB2YXIgZmxhZyA9IHRydWU7CiAgICAgICAgICByZXMucmVzdWx0LmNoYW5uZWxzLmZvckVhY2goZnVuY3Rpb24gKGl0KSB7CiAgICAgICAgICAgIGlmIChpdC5maWJlcl9pbmZvICE9ICLmraPluLgiKSB7CiAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlOwogICAgICAgICAgICAgIGRldmljZUVycm9yTXNnICs9IGl0LmlkICsgIuWPt+mAmumBkyIgKyBpdC5maWJlcl9pbmZvICsgIiYiOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKCiAgICAgICAgICBpZiAoZmxhZyAmJiByZXMucmVzdWx0LmlzX29ubGluZSAmJiByZXMucmVzdWx0LmlzX2RldmljZV9vbmxpbmUgJiYgcmVzLnJlc3VsdC5kZXZpY2Vfc3RhdHVzKSB7CiAgICAgICAgICAgIF90aGlzMTAuYmxpbmtJbWcgPSByZXF1aXJlKCIuLi8uLi9hc3NldHMvaW1nL2dyZWVuTGlnaHQucG5nIik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBfdGhpczEwLmJsaW5rSW1nID0gcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltZy9yZWRMaWd0aC5wbmciKTsKCiAgICAgICAgICAgIGlmICghX3RoaXMxMC5pc0RldmljZUVycm9yKSB7CiAgICAgICAgICAgICAgX3RoaXMxMC5zaG93RGV2aWNlTXNnID0gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RoaXMxMC5pc0RldmljZUVycm9yID0gdHJ1ZTsKCiAgICAgICAgICAgIGlmICghcmVzLnJlc3VsdC5pc19vbmxpbmUpIHsKICAgICAgICAgICAgICBfdGhpczEwLmRldmljZUVycm9yTXNnICs9ICLmlbDmja7lpITnkIbnqIvluo/mlYXpmpwmIjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFyZXMucmVzdWx0LmlzX2RldmljZV9vbmxpbmUpIHsKICAgICAgICAgICAgICBfdGhpczEwLmRldmljZUVycm9yTXNnICs9ICLmlq3nvZEmIjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFyZXMucmVzdWx0LmRldmljZV9zdGF0dXMpIHsKICAgICAgICAgICAgICBfdGhpczEwLmRldmljZUVycm9yTXNnICs9ICLorr7lpIfmlYXpmpwiOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRBbGFybUZpZWxkczogZnVuY3Rpb24gZ2V0QWxhcm1GaWVsZHMoKSB7CiAgICAgIHZhciBfdGhpczExID0gdGhpczsKCiAgICAgIF9nZXRBbGFybUZpZWxkcygpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMucmV0Y29kZSA9PSAyMDAgJiYgcmVzLnJlc3VsdCAmJiByZXMucmVzdWx0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgIHZhciByZXN1bHQgPSByZXMucmVzdWx0OwogICAgICAgICAgdmFyIGFyciA9IFtdOyAvLyBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goayA9PiB7CiAgICAgICAgICAvLyAgIGFyci5wdXNoKHJlc3VsdFtrXSkKICAgICAgICAgIC8vIH0pCgogICAgICAgICAgcmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKHpvbmUpIHsKICAgICAgICAgICAgdmFyIGZpZWxkID0ge307CiAgICAgICAgICAgIGZpZWxkLm5vZGVzID0gem9uZS5ub2RlX2xpc3Q7CiAgICAgICAgICAgIGZpZWxkLm5vZGVzLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgICAgICBub2RlLmxuZyA9IG5vZGUubG9uZ2l0dWRlOwogICAgICAgICAgICAgIG5vZGUubGF0ID0gbm9kZS5sYXRpdHVkZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGZpZWxkLnpvbmUgPSB6b25lLnpvbmU7CiAgICAgICAgICAgIGFyci5wdXNoKGZpZWxkKTsKICAgICAgICAgIH0pOwogICAgICAgICAgYXJyWzBdWydub2RlcyddWzFdLmxuZyA9IDEyMC4yNDMxNDIwMDAwMDA7CiAgICAgICAgICBhcnJbMF1bJ25vZGVzJ11bMV0ubGF0ID0gMzAuMjI3OTgwMDAwMDAwOwogICAgICAgICAgY29uc29sZS5sb2coJ2FycicsIGFycik7CiAgICAgICAgICBfdGhpczExLmFsYXJtbGluZXMgPSBhcnI7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRBcmVhSW5mbzogZnVuY3Rpb24gZ2V0QXJlYUluZm8oKSB7CiAgICAgIHZhciBfdGhpczEyID0gdGhpczsKCiAgICAgIHZhciBwYXJhbXMgPSB7fTsKICAgICAgcGFyYW1zLnN0YXJ0dGltZSA9ICcyMDIwLTA3LTIxIDE1OjAxOjIzJzsKICAgICAgcGFyYW1zLmVuZHRpbWUgPSAnMjAyMC0wNy0yOCAxNTowMToyMyc7CgogICAgICBfZ2V0QXJlYUluZm8ocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCkgewogICAgICAgICAgLy8gWzUyLCAn6LSj5Lu75Yy6J10sCiAgICAgICAgICAvLyBbNDAsICforr7lpIfmlbAnXSwKICAgICAgICAgIC8vIFszMCwgJ+mYsuWMuuWeiyddLAogICAgICAgICAgLy8gWzIwLCAn5a6a5L2N5Z6LJ10sCiAgICAgICAgICAvLyBbNDAsICfotKPku7vkuronXQogICAgICAgICAgdmFyIHRlbXBBcnIxID0gW107CiAgICAgICAgICB0ZW1wQXJyMS5wdXNoKHJlcy56b25lX251bSB8fCAwKTsKICAgICAgICAgIHRlbXBBcnIxLnB1c2goJ+i0o+S7u+WMuicpOwogICAgICAgICAgdmFyIHRlbXBBcnIyID0gW107CiAgICAgICAgICB0ZW1wQXJyMi5wdXNoKHJlcy5ndF9udW0gKyByZXMuc210X251bSB8fCAwKTsKICAgICAgICAgIHRlbXBBcnIyLnB1c2goJ+iuvuWkh+aVsCcpOwogICAgICAgICAgdmFyIHRlbXBBcnIzID0gW107CiAgICAgICAgICB0ZW1wQXJyMy5wdXNoKHJlcy5zbXRfbnVtIHx8IDApOwogICAgICAgICAgdGVtcEFycjMucHVzaCgn6Ziy5Yy65Z6LJyk7CiAgICAgICAgICB2YXIgdGVtcEFycjQgPSBbXTsKICAgICAgICAgIHRlbXBBcnI0LnB1c2gocmVzLmd0X251bSB8fCAwKTsKICAgICAgICAgIHRlbXBBcnI0LnB1c2goJ+WumuS9jeWeiycpOwogICAgICAgICAgdmFyIHRlbXBBcnI1ID0gW107CiAgICAgICAgICB0ZW1wQXJyNS5wdXNoKHJlcy56b25lX251bSAqIDIgfHwgMCk7CiAgICAgICAgICB0ZW1wQXJyNS5wdXNoKCfotKPku7vkuronKTsKICAgICAgICAgIF90aGlzMTIuYXJlYURhdGEgPSBbWydhbW91bnQnLCAncHJvZHVjdCddLCB0ZW1wQXJyMSwgdGVtcEFycjIsIHRlbXBBcnIzLCB0ZW1wQXJyNCwgdGVtcEFycjVdOwogICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuYXJlYURhdGEnLCBfdGhpczEyLmFyZWFEYXRhKTsKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpczEyLmluaXRDaGFydDIoKTsKICAgICAgICAgIH0sIDUwMCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXR0VGltZTogZnVuY3Rpb24gZ2V0dFRpbWUoKSB7CiAgICAgIHZhciB0aW1lID0gbmV3IERhdGUoKTsKICAgICAgdmFyIHRpbWVzdHIgPSB0aW1lLnRvTG9jYWxlU3RyaW5nKCk7CiAgICAgIHRoaXMudGltZSA9IHRpbWVzdHI7CiAgICB9LAogICAgaGFuZGxlU2hvd0RlY0luZm86IGZ1bmN0aW9uIGhhbmRsZVNob3dEZWNJbmZvKGlkKSB7CiAgICAgIHZhciBfdGhpczEzID0gdGhpczsKCiAgICAgIGdldERldmljZUluZm8oewogICAgICAgIGlkOiBpZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCkgewogICAgICAgICAgaWYgKCFyZXMucmVzdWx0KSB7CiAgICAgICAgICAgIF90aGlzMTMuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgICBtZXNzYWdlOiAn6K6+5aSH5pWw5o2u5byC5bi477yBJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMTMuY3VycmVudERldiA9IHJlcy5yZXN1bHQ7CiAgICAgICAgICAgIF90aGlzMTMuaW5mb1R5cGUgPSAxOwogICAgICAgICAgICBfdGhpczEzLnNob3dXaW5kb3cgPSB0cnVlOwoKICAgICAgICAgICAgX3RoaXMxMy4kZm9yY2VVcGRhdGUoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHNob3dBbGFybUluZm86IGZ1bmN0aW9uIHNob3dBbGFybUluZm8oaXQpIHsKICAgICAgdGhpcy5jdXJyZW50QWxhcm0gPSBpdDsKICAgICAgdGhpcy5pbmZvVHlwZSA9IDI7CiAgICAgIHRoaXMuc2hvd1dpbmRvdyA9IHRydWU7CiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICB9LAogICAgYWRkVG9XaGl0ZUxpc3Q6IGZ1bmN0aW9uIGFkZFRvV2hpdGVMaXN0KGlkKSB7CiAgICAgIHRoaXMuc2hvd01vZGFsID0gdHJ1ZTsKICAgICAgdGhpcy53aGl0ZUxpc3RGb3JtLmlkID0gaWQ7CiAgICAgIHRoaXMud2hpdGVMaXN0Rm9ybS5lbmREYXRlID0gbmV3IERhdGUoKTsKICAgIH0sCiAgICBjaGFuZ2VMaW5lOiBmdW5jdGlvbiBjaGFuZ2VMaW5lKHZhbCkgewogICAgICB2YXIgX3RoaXMxNCA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyh2YWwpOwogICAgICB0aGlzLmN1cnJlbnRMaW5lID0gdmFsOwogICAgICB2YXIgcGFyYW1zID0ge307CiAgICAgIHBhcmFtcy5hcmVhX2lkID0gdGhpcy5kZWZhdWx0QXJlYUlkOwogICAgICBxdWVyeUFyZWFHcHMocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCAmJiByZXMucmVzdWx0ICYmIHJlcy5yZXN1bHQubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXMxNC5saW5lczIgPSBbXTsKICAgICAgICAgIF90aGlzMTQubGluZVBvaW50ID0gW107CiAgICAgICAgICByZXMucmVzdWx0WzBdLmZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChsaW5lKSB7CiAgICAgICAgICAgIF90aGlzMTQuYnVpbGRNYXBMaW5lcyhsaW5lKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuZ2V0VGFibGVEYXRhKCk7CiAgICB9LAogICAgY2hhbmdlVGltZTogZnVuY3Rpb24gY2hhbmdlVGltZSh2YWwpIHsKICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgdGhpcy5jdXJyZW50RGF0ZSA9IHZhbDsKICAgICAgdGhpcy5nZXRUYWJsZURhdGEoKTsKICAgIH0sCiAgICB0ZXN0OiBmdW5jdGlvbiB0ZXN0KGlkKSB7CiAgICAgIHZhciBfdGhpczE1ID0gdGhpczsKCiAgICAgIC8vIHRoaXMuaW5mby5oZWlnaHQgPSBldmVudC5zY3JlZW5ZCiAgICAgIC8vIHRoaXMuaW5mby53aWR0aCA9IGV2ZW50LnNjcmVlblgKICAgICAgdmFyIHBhcmFtcyA9IHt9OwogICAgICBwYXJhbXMuaWQgPSBpZDsKICAgICAgcGFyYW1zLnN0YXJ0dGltZSA9ICcyMDIwLTA4LTAxIDAwOjAwOjAwJzsKICAgICAgcGFyYW1zLmVuZHRpbWUgPSAnMjAyMC0wOC0xMCAwMDowMDowMCc7CiAgICAgIHF1ZXJ5Wm9uZUluZm8ocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnJldGNvZGUgPT09IDIwMCkgewogICAgICAgICAgaWYgKCFyZXMucmVzdWx0KSB7CiAgICAgICAgICAgIF90aGlzMTUuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgICBtZXNzYWdlOiAn57q/6Lev5pWw5o2u5byC5bi477yBJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMTUuY3VycmVudFpvbmUgPSByZXMucmVzdWx0OwogICAgICAgICAgICBfdGhpczE1LmluZm9UeXBlID0gMDsKICAgICAgICAgICAgX3RoaXMxNS5zaG93V2luZG93ID0gdHJ1ZTsKCiAgICAgICAgICAgIF90aGlzMTUuJGZvcmNlVXBkYXRlKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsgLy8gdGhpcy4kcmVmc1snaW5mb1dpbmRvdyddLnN0eWxlLmxlZnQgPSBldmVudC5waXhlbC54ICsgMTUgKyAncHgnCiAgICAgIC8vIHRoaXMuJHJlZnNbJ2luZm9XaW5kb3cnXS5zdHlsZS50b3AgPSBldmVudC5waXhlbC55IC0gMjA1ICsgJ3B4JwogICAgfSwKICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoX3JlZikgewogICAgICB2YXIgQk1hcCA9IF9yZWYuQk1hcCwKICAgICAgICAgIG1hcCA9IF9yZWYubWFwOwogICAgICBjb25zb2xlLmxvZygn6aaW6aG15Zyw5Zu+5L+h5oGv77yaJywgQk1hcCwgbWFwKTsKICAgICAgdGhpcy5jZW50ZXIubG5nID0gdGhpcy5jZW50ZXIubG9uZ2l0dWRlOwogICAgICB0aGlzLmNlbnRlci5sYXQgPSB0aGlzLmNlbnRlci5sYXRpdHVkZTsKICAgICAgdGhpcy56b29tID0gMTQ7CiAgICAgIHdpbmRvdy5tYXAgPSBtYXA7CiAgICAgIG1hcC5Db250cm9sQW5jaG9yID0gJ0JNQVBfQU5DSE9SX1RPUF9MRUZUJzsKICAgICAgbWFwLmVuYWJsZUF1dG9SZXNpemUoKTsKICAgIH0sCiAgICBsaW5lSW46IGZ1bmN0aW9uIGxpbmVJbihpdCwgaSkgewogICAgICAvL2xldCB0ZW1wQXJyID0gc3RyLnNwbGl0KCctLScpCiAgICAgIC8vdGhpcy5saW5lc1t0ZW1wQXJyWzBdXS5maWVsZHNbdGVtcEFyclsxXV0ubGluZUNvbG9yID0gJyNlNmE3MDAnCiAgICAgIHRoaXMubGluZXMyW2ldLmxpbmVDb2xvciA9ICcjZTZhNzAwJzsKICAgIH0sCiAgICBsaW5lT3V0OiBmdW5jdGlvbiBsaW5lT3V0KGl0LCBpKSB7CiAgICAgIC8vbGV0IHRlbXBBcnIgPSBzdHIuc3BsaXQoJy0tJykKICAgICAgLy90aGlzLmxpbmVzW3RlbXBBcnJbMF1dLmZpZWxkc1t0ZW1wQXJyWzFdXS5saW5lQ29sb3IgPSAnIzIzY2VmZCcKICAgICAgdGhpcy5saW5lczJbaV0ubGluZUNvbG9yID0gJyMyM2NlZmQnOwogICAgfSwKICAgIHNob3dMaW5lSW5mbzogZnVuY3Rpb24gc2hvd0xpbmVJbmZvKGl0KSB7CiAgICAgIHRoaXMuY3VycmVudExpbmVJbmZvID0gaXQ7CiAgICAgIHRoaXMuaW5mb1R5cGUgPSAxOwogICAgICB0aGlzLnNob3dXaW5kb3cgPSB0cnVlOwogICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgfSwKICAgIGhhbmRsZVNob3dBcmVhSW5mbzogZnVuY3Rpb24gaGFuZGxlU2hvd0FyZWFJbmZvKCkgewogICAgICB0aGlzLnNob3dBcmVhID0gIXRoaXMuc2hvd0FyZWE7CiAgICB9LAogICAgaGFuZGxlRnVsbFNjcmVlbjogZnVuY3Rpb24gaGFuZGxlRnVsbFNjcmVlbigpIHsKICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLiRyZWZzLmRvYzsKCiAgICAgIGlmICh0aGlzLmZ1bGxzY3JlZW4pIHsKICAgICAgICBpZiAoZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4pIHsKICAgICAgICAgIGRvY3VtZW50LmV4aXRGdWxsc2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuKSB7CiAgICAgICAgICBkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuKSB7CiAgICAgICAgICBkb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChkb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKSB7CiAgICAgICAgICBkb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmIChlbGVtZW50LnJlcXVlc3RGdWxsc2NyZWVuKSB7CiAgICAgICAgICBlbGVtZW50LnJlcXVlc3RGdWxsc2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKSB7CiAgICAgICAgICBlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuKSB7CiAgICAgICAgICBlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuKCk7CiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50Lm1zUmVxdWVzdEZ1bGxzY3JlZW4pIHsKICAgICAgICAgIC8vIElFMTEKICAgICAgICAgIGVsZW1lbnQubXNSZXF1ZXN0RnVsbHNjcmVlbigpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5mdWxsc2NyZWVuID0gIXRoaXMuZnVsbHNjcmVlbjsKICAgIH0sCiAgICBpbml0Q2hhcnQyOiBmdW5jdGlvbiBpbml0Q2hhcnQyKCkgewogICAgICB2YXIgX3RoaXMxNiA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0MiA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmNoYXJ0Mik7CiAgICAgIHRoaXMuY2hhcnQyLnNldE9wdGlvbih7CiAgICAgICAgZGF0YXNldDogewogICAgICAgICAgc291cmNlOiB0aGlzLmFyZWFEYXRhCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICB0b3A6ICI1MHB4IiwKICAgICAgICAgIGxlZnQ6ICI1MHB4IiwKICAgICAgICAgIGJvdHRvbTogIjEwJSIKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgLy8gbmFtZTogJ+S6i+S7tuaVsCcsCiAgICAgICAgICBjb2xvcjogIiNkNmQyZDIiLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgLy8gZGF0YTogWyfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrScsICfkuIMnLCAn5YWrJywgJ+S5nSddLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2Q2ZDJkMicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicgLy8g6aKc6ImyCgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIC8vIG5hbWU6ICfotKPku7vljLrlkI0nLAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgLy8gZGF0YTogWyfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrScsICfkuIMnLCAn5YWrJywgJ+S5nSddLAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI2Q2ZDJkMicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgd2lkdGg6ICc1MHB4JwogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnIC8vIOminOiJsgoKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgd2lkdGg6ICI1MHB4IgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY29sb3I6ICIjMjNjZWZkIiwKICAgICAgICAvLyBncmlkOiB7Y29udGFpbkxhYmVsOiB0cnVlfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGVuY29kZTogewogICAgICAgICAgICAvLyBNYXAgdGhlICJhbW91bnQiIGNvbHVtbiB0byBYIGF4aXMuCiAgICAgICAgICAgIHg6ICdhbW91bnQnLAogICAgICAgICAgICAvLyBNYXAgdGhlICJwcm9kdWN0IiBjb2x1bW4gdG8gWSBheGlzCiAgICAgICAgICAgIHk6ICdwcm9kdWN0JwogICAgICAgICAgfSwKICAgICAgICAgIGJhcldpZHRoOiAyMAogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMTYuY2hhcnQyLnJlc2l6ZSgpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0Q2hhcnQzOiBmdW5jdGlvbiBpbml0Q2hhcnQzKCkgewogICAgICB2YXIgX3RoaXMxNyA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0MyA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmNoYXJ0Myk7CiAgICAgIHRoaXMuY2hhcnQzLnNldE9wdGlvbih7CiAgICAgICAgY29sb3I6IFsiIzIzY2VmZCIsICIjNjFhMGE4Il0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+S6i+S7tuexu+WeiycsCiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogWyc0MCUnLCAnNTUlJ10sCiAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzYwJSddLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgZm9ybWF0dGVyOiAne2J8e2J9fe+8mlxue2hyfH1cbiAgICB7ZHx7ZH19JSAgICcsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMC4yKScsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnI2FhYScsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgICBib3JkZXJSYWRpdXM6IDQsCiAgICAgICAgICAgIC8vIHBhZGRpbmc6IFsyLCA3XSwKICAgICAgICAgICAgcmljaDogewogICAgICAgICAgICAgIGI6IHsKICAgICAgICAgICAgICAgIC8vIGNvbG9yOiAnIzk5OScsCiAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAyMCwKICAgICAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZDogewogICAgICAgICAgICAgICAgLy8gY29sb3I6ICcjOTk5JywKICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDIwLAogICAgICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBocjogewogICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjYWFhJywKICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMC41LAogICAgICAgICAgICAgICAgaGVpZ2h0OiAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgdmFsdWU6IHRoaXMuZGlzQ291bnQgfHwgMTAsCiAgICAgICAgICAgIG5hbWU6ICfpnZ7nrqHmjqfkuK0nCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiB0aGlzLmNoYXJnZUNvdW50IHx8IDEwLAogICAgICAgICAgICBuYW1lOiAn566h5o6n5LitJwogICAgICAgICAgfV0KICAgICAgICB9XQogICAgICB9KTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczE3LmNoYXJ0My5yZXNpemUoKTsKICAgICAgfSk7CiAgICB9LAogICAgb3BlblN3aXRjaDogZnVuY3Rpb24gb3BlblN3aXRjaCgpIHsKICAgICAgdGhpcy5yZWFsVGltZSA9ICF0aGlzLnJlYWxUaW1lOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnJlYWxUaW1lKTsKCiAgICAgIGlmICh0aGlzLnJlYWxUaW1lKSB7CiAgICAgICAgdGhpcy5nZXRBcmVhTGlzdCgpOyAvLyDojrflj5blnLDljLrliJfooagKCiAgICAgICAgdGhpcy5nZXRSZWFsVGFibGVEYXRhKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRBcmVhTGlzdCgpOyAvLyDojrflj5blnLDljLrliJfooagKCiAgICAgICAgdGhpcy5nZXRUYWJsZURhdGEoKTsgLy8g6I635Y+W5LqL5Lu25YiX6KGo5pWw5o2uCiAgICAgIH0KICAgIH0sCiAgICBoaWRlTW9kYWw6IGZ1bmN0aW9uIGhpZGVNb2RhbCgpIHsKICAgICAgLy8g5Y+W5raI5by556qX5Zue6LCDCiAgICAgIHRoaXMuc2hvd01vZGFsID0gZmFsc2U7CiAgICB9LAogICAgc3VibWl0TW9kYWw6IGZ1bmN0aW9uIHN1Ym1pdE1vZGFsKCkgewogICAgICB2YXIgX3RoaXMxOCA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0ge307CiAgICAgIHBhcmFtcy5hbGFybV9pZCA9IHRoaXMud2hpdGVMaXN0Rm9ybS5pZDsKICAgICAgY29uc29sZS5sb2codGhpcy53aGl0ZUxpc3RGb3JtLmVuZERhdGUpOwoKICAgICAgaWYgKHRoaXMud2hpdGVMaXN0Rm9ybS5lbmREYXRlKSB7CiAgICAgICAgcGFyYW1zLmVuZF90aW1lID0gKHRoaXMud2hpdGVMaXN0Rm9ybS5lbmREYXRlLmdldFRpbWUoKSArICIiKS5zdWJzdHIoMCwgMTApOwogICAgICAgIGFsZXJ0V2hpdGUocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIGlmIChyZXMucmV0Y29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzMTguJG1lc3NhZ2UoewogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBtZXNzYWdlOiAn5Yqg5YWl55m95ZCN5Y2V5oiQ5Yqf77yBJwogICAgICAgICAgICB9KTsgLy/liqDlhaXnmb3lkI3ljZXlkI7lu7bov58y56eS6I635Y+W5ZGK6K2mCgoKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgaWYgKHRoaXMucmVhbFRpbWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0UmVhbFRhYmxlRGF0YSgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmdldFRhYmxlRGF0YSgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgMjAwMCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zaG93TW9kYWwgPSBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXliLDmnJ/ml6XvvIEnCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBoaWRlRGV2aWNlTXNnOiBmdW5jdGlvbiBoaWRlRGV2aWNlTXNnKCkgewogICAgICAvLyDlj5bmtojlvLnnqpflm57osIMKICAgICAgdGhpcy5zaG93RGV2aWNlTXNnID0gZmFsc2U7CiAgICB9LAogICAgc2hvd0JsaW5rOiBmdW5jdGlvbiBzaG93QmxpbmsoKSB7CiAgICAgIHZhciBibGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJibGluayIpOyAvL3RoaXMuJHJlZnMuYmxpbmsKCiAgICAgIGJsaW5rLnN0eWxlLnZpc2liaWxpdHkgPSBibGluay5zdHlsZS52aXNpYmlsaXR5ID09ICJ2aXNpYmxlIiA/ICJoaWRkZW4iIDogInZpc2libGUiOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"gs-home-wrapper\" @click.capture=\"showWindow = false\" ref=\"doc\" >\n    <img src=\"../../assets/img/background.png\" class=\"bg-img\" alt=\"\">\n    <div class=\"top-title\">\n      <img src=\"../../assets/img/topleft.png\" class=\"top-left-wrapper\" alt=\"\">\n      <div class=\"top-mid-wrapper\">\n        <img src=\"../../assets/img/topmid.png\" class=\"f-width f-width\">\n        <span class=\"title-content f-width abs\">振动预警防护全覆盖平台</span>\n      </div>\n      <img src=\"../../assets/img/topright.png\" class=\"top-right-img abs\">\n      <span style=\"position: absolute;z-index: 9;color: #23cefd;right: 3%;top: 10%;\">{{time}}</span>\n    </div>\n    <svg-icon :icon-class=\"fullscreen?'exit-fullscreen':'fullscreen'\" @click=\"handleFullScreen\" style=\"position: absolute;right: 2vw;top: 5vh;color: #23cefd;;z-inde: 999;cursor: pointer;width: 20px;height: 20px;\"/>\n    <div class=\"bottom-content f-width abs\">\n      <div class=\"content-mid f-height abs\" style=\"width: 76.5%;\"> \n        <div class=\"f-width rel\" style=\"height: 97.5%;margin-bottom: 1.5vh;\">\n          <!-- 线路信息窗口开始 -->\n          <div class=“gs-info-window-line” \n          :style=\"{'position': 'absolute', 'background': 'rgba(8, 32, 51, 0.85)', 'z-index': '12', 'border-radius': '6px', 'color': 'rgb(35 206 253)', 'left': '10px', 'top': '10px','font-size': '14px'}\"\n          ref=\"infoWindow\" \n          v-show=\"showWindow\">\n              <div class=\"line-info-title\">\n                <span class=\"title-detail\">\n                  <span v-if=\"infoType == 0\">线路名称：{{currentLineInfo.name}}</span>  \n                  <span v-if=\"infoType == 1\">线路名称：{{currentLineInfo.name}}</span>\n                  <span v-if=\"infoType == 2\">告警信息</span>  \n                </span>\n              </div>\n              <div class=\"line-info-content\" v-if=\"infoType == 0\">\n              </div>\n              <div class=\"line-info-content\" v-if=\"infoType == 1\">\n                <div class=\"content-detail\"><span>线路ID：</span> <span>{{currentLineInfo.field_id}}</span></div>\n                <div class=\"content-detail\"><span>负责人1：</span> <span>{{currentLineInfo.head1}}</span> </div>\n                <div class=\"content-detail\"><span>联系电话：</span> <span>{{currentLineInfo.phone1}}</span> </div>\n                <div class=\"content-detail\"><span>负责人2：</span> <span>{{currentLineInfo.head2}}</span> </div>\n                <div class=\"content-detail\"><span>联系电话：</span> <span>{{currentLineInfo.phone2}}</span> </div>\n              </div>\n              <div class=\"line-info-content\" v-if=\"infoType == 2\">\n                <div class=\"content-detail\"><span>位置：</span> <span>{{parseFloat(currentAlarm.lng).toFixed(2)}},{{parseFloat(currentAlarm.lat).toFixed(2)}}</span></div>\n                <div class=\"content-detail\"><span>距离：</span> <span>{{currentAlarm.position}}</span></div>\n                <div class=\"content-detail\"><span>振动开始时间：</span> <span>{{currentAlarm.beginTime}}</span></div>\n                <div class=\"content-detail\"><span>振动结束时间：</span> <span>{{currentAlarm.endTime}}</span></div>\n                <div class=\"content-detail\"><span>次数：</span> <span>{{currentAlarm.continueTime}}</span> </div>\n                <div class=\"content-detail\"><span>类型：</span> <span>{{currentAlarm.alarmType}}</span> </div>\n                <div class=\"content-detail\"><span>等级：</span> <span>{{currentAlarm.level}}</span> </div>\n                <div class=\"content-detail\"><el-button style=\"float: right;margin-right: 10px;\"  @click=\"addToWhiteList(currentAlarm.id)\">加入白名单</el-button></div>\n              </div>\n          </div>\n          <div id=\"blink\">\n              <img :src=\"blinkImg\" :style=\"{'position': 'absolute', 'z-index': '12','right': '0px', 'top': '0px'}\"/>\n          </div>\n          <!-- 线路信息窗口结束 -->\n          <img src=\"../../assets/img/map.png\" class=\"f-width f-height abs\" style=\"left: 0; top: 0;z-index: 2;\" alt=\"\">\n          <baidu-map :mapStyle=\"mapStyle\" :mapClick=\"false\" :scroll-wheel-zoom=\"true\" :center=\"center\" :zoom=\"zoom\" @ready=\"handler\" class=\"bm-view\">\n            <!-- 自定义点 -->\n            <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item) in linePoint\" :key=\"item.id\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\"></bm-marker>\n            <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item) in alarmPoints\" :key=\"item.id\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\" @click=\"showAlarmInfo(item)\"></bm-marker>\n             <!-- <bm-marker :position=\"item\" :dragging=\"false\" v-for=\"(item, index) in linePoint\" :key=\"index\" :icon=\"{url: item.icon, size: {width: 35, height: 35}}\" @click=\"handleShowDecInfo(item.id)\"></bm-marker>-->\n            <!-- <bm-marker :position=\"item\" :dragging=\"true\" v-for=\"(item, index) in polylinePath\" :key=\"index\" :icon=\"{url: 'https://s1.ax1x.com/2020/08/03/aUAul9.gif', size: {width: 35, height: 35}}\"></bm-marker> -->\n            <!-- 折线控件 -->\n            <!--<div v-for=\"(line, index) in lines\" :key=\" 'line' + '-' + line.zone_id + '-' + index\">-->\n              <bm-polyline v-for=\"(item, index2) in lines2\" :key=\"item.field_id\" :path=\"item.points\" :stroke-color=\"item.lineColor\"\n                @mouseover=\"lineIn(item,index2)\" \n                @mouseout=\"lineOut(item,index2)\"\n                :stroke-opacity=\"0.75\" :stroke-weight=\"4\" :editing=\"false\" @click=\"showLineInfo(item)\" >\n              </bm-polyline>    \n            <!--</div>-->\n            <bm-polyline v-for=\"(field, index) in alarmlines\" :key=\"'alarm' + index\" :path=\"field.nodes\" stroke-color=\"#ec2d2e\"\n              style=\"z-index: 100\"\n              :stroke-opacity=\"0.9\" :stroke-weight=\"4\" :editing=\"false\" @click=\"test(field.zone)\">\n            </bm-polyline>    \n          </baidu-map>\n        </div>\n      </div>\n      <div class=\"content-right f-height abs\" style=\"width: 25%;right: 0;padding: 0 20px;\">\n        <div class=\"f-width rel\" style=\"height: 17%;margin-bottom: 1.5vh;position:relative;\">\n          <img src=\"../../assets/img/condition.png\" class=\"f-width f-height\" alt=\"\">\n          <div class=\"switch-all\">\n            <span style=\"color:#fff;font-size: 5px;\">查看实时数据：</span>\n            <span class=\"switch\"  @click=\"openSwitch\">\n                <div class=\"switch-bg\" :class=\"{on:realTime==1}\">\n                    <div class=\"switch-btn\" :class=\"{on:realTime==1}\"></div>\n                </div>\n            </span>\n          </div>\n          <div class=\"com-title-wrapper abs\">\n            <img src=\"../../assets/img/title.png\" class=\"f-width f-height\" alt=\"\">\n            <span class=\"com-title-content abs\">线路时间选择</span>\n          </div>\n          <div class=\"f-width f-height abs\" style=\"top: 35%;left: 3.5%;\" >\n            <el-select ref=\"selectLine\" class=\"map-select\" size=\"mini\" v-model=\"mapForm.line\" @change=\"changeLine\" v-bind:disabled=\"realTime\" :popper-append-to-body=\"false\">\n              <el-option v-for=\"item in lineList\" :key=\"item.field_id\"  :value=\"item.field_id\" :label=\"item.field_id\">\n                {{item.field_id}}\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"f-width f-height abs\" style=\"top: 65%;left: 3.5%;\">\n            <el-select ref=\"selectTime\" class=\"map-select\" size=\"mini\" v-model=\"mapForm.time\"  @change=\"changeTime\" v-bind:disabled=\"realTime\" :popper-append-to-body=\"false\">\n              <el-option value=\"1\" label=\"一周内\">\n                一周内\n              </el-option>\n              <el-option value=\"2\" label=\"两周内\">\n                两周内\n              </el-option>\n              <el-option value=\"3\" label=\"一月内\">\n                一月内\n              </el-option>\n            </el-select>\n          </div>\n        </div>\n        <div class=\"f-width rel\" style=\"height: 80.5%;\">\n          <img src=\"../../assets/img/event.png\" class=\"f-width f-height\" alt=\"\">\n          <div class=\"com-title-wrapper abs\">\n            <img src=\"../../assets/img/title.png\" class=\"f-width f-height\" alt=\"\">\n            <span class=\"com-title-content abs\">近期事件列表</span>\n          </div>\n          <div class=\"abs f-width user_skills scrollbar\" style=\"top: 8%;height: 100%;\">\n            <el-scrollbar style=\"height:100%\">\n            <el-table\n              :data=\"tableData\"\n              style=\"width: 94%;height:84%\">\n              <el-table-column\n                prop=\"field_id\"\n                align=\"center\"\n                min-width=\"100\"\n                label=\"线路名称\">\n              </el-table-column>\n              <el-table-column\n                prop=\"alarm_level\"\n                label=\"报警级别\"\n                align=\"left\">\n              </el-table-column>\n            </el-table>\n            </el-scrollbar>\n          </div>\n          \n        </div>\n        <Modal :show=\"showModal\" :title=\"modalTitle\" @hideModal=\"hideModal\" @submit=\"submitModal\">\n          <el-form ref=\"whiteListForm\" :model=\"whiteListForm\">\n            <el-form-item style=\"color:#FFF\" label=\"到期日\">\n              <el-date-picker v-model=\"whiteListForm.endDate\" type=\"datetime\" placeholder=\"选择日期\" />\n            </el-form-item>\n          </el-form>\n        </Modal>\n        <Modal :show=\"showDeviceMsg\" :title=\"deviceMsgTitle\" @hideModal=\"hideDeviceMsg\" @submit=\"hideDeviceMsg\">\n          <p style=\"color:#fff\">{{deviceErrorMsg}}</p>\n        </Modal>\n      </div>\n    </div>    \n\n    \n\n    <!-- 地区信息窗口开始 -->\n    <div draggable=\"true\" style=\"display: none;\">\n      <div class=\"gs-info-window-area\">\n        <div class=\"area-wrapper\" @click=\"handleShowAreaInfo\">\n          <span>地图统计信息</span> \n          <div class=\"\" style=\"position: absolute;right: 15px;top: 0px;\">\n            <i v-if=\"showArea == true\" class=\"el-icon-arrow-up\" />\n            <i v-else class=\"el-icon-arrow-down\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 地区信息窗口结束 -->\n  </div>\n</template>\n\n<script>\nimport { queryArea } from '@/api/area/area.js'\nimport { queryAlarm,queryRealTimeAlarm,alertWhite } from '@/api/alarm/alarm.js'\nimport { queryLineDetail } from '@/api/line/line.js'\nimport { deviceInfo } from '@/api/device/device.js'\nimport echarts from 'echarts'\nimport { queryAreaGps, queryDeviceGps, getAreaInfo, getMapCenter, getDeviceInfo, queryZoneInfo, getAlarmFields } from '@/api/dashboard/dashboard.js'\nimport Modal from './modal.vue'\nconst NORMAL_COLOR = '#23cefd'\nconst SPECIAL_COLOR = \"black\"\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      fullscreen: false,\n      value1: '',\n      time: '',\n      showArea: true,\n      center: {lng: 120.203365, lat: 30.211784},\n      zoom: 8,\n      polylinePath: [],\n      lines: [],\n      lines2: [],\n      linePoint:[],\n      alarmlines: [],\n      lineColor: [],\n      showWindow: false,\n      mapForm: {\n        area: '请选择区域',\n        time: '一周内'\n      },\n      currentDev: {},\n      currentZone: {},\n      currentAlarm:{},\n      whiteListForm:{},\n      infoType: '',\n      areaList: [],\n      lineList: [],\n      defaultAreaId : \"0001\",\n      alarmPoints : [],\n      currentLine : \"全部\",\n      currentLineInfo:{},\n      currentDate : 1,\n      currentStartDate : this.defaultStartDate(),\n      currentEndDate : this.defaultEndDate(),\n      realTime : true,\n      blinkImg : require(\"../../assets/img/greenLight.png\"),\n      mapStyle: {\n        features: [\"road\", \"building\", \"water\", \"land\"], //隐藏地图上的\"poi\",\n        style: \"midnight\"\n        // var style_map=['normal','light','dark','redalert','googlelite','grassgreen','midnight','pink','darkgreen','bluish','grayscale','hardedge'];\n        //分别风格是：默认地图样式，清新蓝风格，黑夜风格，红色警戒风格，精简风格，自然绿风格，午夜蓝风格，浪漫粉风格，青春绿风格，清新蓝绿风格，高端灰风格，强边界风格\n      },\n      chart1: '',\n      chart2: '',\n      chart3: '',\n      chart1Data: [],\n      modalTitle: '加入白名单',\n      showModal: false,\n      deviceMsgTitle:\"设备故障\",\n      showDeviceMsg: false,\n      isDeviceError: false,\n      deviceErrorMsg:\"正常运行\",\n      tableData: [{\n            date: '2016-05-02',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-04',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-01',\n            name: '王小虎',\n            address: '2020/7/24'\n          }, {\n            date: '2016-05-03',\n            name: '王小虎',\n            address: '2020/7/24'\n          }]\n    \n    \n    }\n  },\n  components: {\n      Modal\n    },\n  created() {\n    //this.getInfo()\n    this.getDeviceGps()\n    //this.getCenter() // 获取地图坐标中线点\n    //this.getAreaInfo() // 区域统计信息\n    this.getAreaList() // 获取地区列表\n    // 获取事件列表数据\n    if(this.realTime){\n      this.getRealTableData();\n    }else{\n      this.getTableData();\n    }\n    this.queryLineDetail() // 获取所有责任区的告警事件\n    this.time = (new Date()).toLocaleString()\n  },\n  mounted() {\n    setInterval(() => {\n      if(this.realTime){\n        this.getRealTableData();\n      }else{\n        this.getTableData();\n      }\n    }, 1000*60)\n    setInterval(() => {\n      //this.getAlarmFields()\n    }, 5000)\n    setInterval(() => {\n      this.gettTime()\n    }, 1000)\n    setInterval(() => {\n      this.getDeviceInfo()//获取设备状态\n      this.showBlink()//亮灯\n    }, 1000)\n    //设备故障时十分钟提醒一次\n    setInterval(() => {\n      if(this.isDeviceError){\n        this.showDeviceMsg = true;\n      }\n    }, 1000*60*10)\n  },\n  computed: {\n    alarmCount() {\n      let count = 0\n      this.chart1Data.forEach((item, index) => {\n        if (index > 0) {\n          count += Number(item[0])\n        }\n      })\n      return count\n    }\n  },\n  methods: {\n    initChart1() {\n      this.chart1 = echarts.init(this.$refs.chart1)\n      this.chart1.setOption({\n          title: {\n            show: \"true\",\n            text: \"各责任区事件统计\",\n            textStyle: {//主标题文本样式{\"fontSize\": 18,\"fontWeight\": \"bolder\",\"color\": \"#333\"}\n              // fontFamily: 'Arial, Verdana, sans...',\n              fontSize: 16,\n              // fontStyle: 'normal',\n              // fontWeight: 'normal',\n              color: \"#d6d2d2\"\n            },\n            top: \"0px\",\n            left: \"8%\"\n          },\n          dataset: {\n              source: this.chart1Data\n          },\n          grid: {\n            top: \"15%\",\n            left: \"40px\",\n            bottom: \"17.5%\"\n          },\n          xAxis: {\n              type: 'value',\n              // name: '事件数',\n              color: \"#d6d2d2\",\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  }\n              },\n              axisLine: {\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              }\n          },\n          yAxis: {\n              type: 'category',\n              // name: '责任区名',\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  },\n                  width: '50px'\n              },\n              axisLine: {\n                  show: false,\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              },\n              nameTextStyle: {\n                width: \"50px\"\n              }\n          },\n          color: \"#23cefd\",\n          // grid: {containLabel: true},\n          series: [\n              {\n                  type: 'bar',\n                  encode: {\n                      // Map the \"amount\" column to X axis.\n                      x: 'amount',\n                      // Map the \"product\" column to Y axis\n                      y: 'product'\n                  },\n                  barWidth: 20\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart1.resize();\n      })\n    },\n\n    // 获取GPS数据\n    getInfo() {\n      this.listLoading = true\n      queryAreaGps(this.queryForm).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          let originArr = res.result // 所有责任区（含id）\n          let afterArr = [] // 数据处理重组，最内层添加线条颜色字段\n          originArr.forEach(line => {\n            let originLine = {}\n            originLine.zone_id = line.zone_id\n            originLine.fields = []\n            line.fields.forEach(item => {\n              let tempObj = {}\n              tempObj.points = []\n              item.nodes.forEach(node => {\n                let nodeObj = {}\n                nodeObj.lng = node.longitude\n                nodeObj.lat = node.latitude\n                nodeObj.order = node.order\n                tempObj['points'].push(nodeObj)\n              })\n              tempObj.field_id = item.field_id\n              tempObj.lineColor = NORMAL_COLOR\n              originLine.fields.push(tempObj)\n            })\n            afterArr.push(originLine)\n          })\n          this.lines = afterArr\n          this.getAlarmFields()\n          console.log(\"this.lines\", this.lines)\n        }\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    defaultEndDate() {\n      var tmp = Date.parse(new Date()).toString();\n      tmp = tmp.substr(0,10);\n      return tmp;\n    },\n    defaultStartDate() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 7;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    defaultStartDate2() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 14;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    defaultStartDate3() {\n      var tmp = Date.parse(new Date());\n      tmp = tmp - 1000 * 60 * 60 * 24 * 30;\n      tmp = tmp.toString().substr(0,10);\n      return tmp;\n    },\n    // 获取地区数据\n    getAreaList() {\n      let params = {}\n      params.page = 1\n      params.limit = 1000\n      queryArea(params).then(res => {\n        if (res.retcode == 200) {\n          /* this.areaList = res.result\n          this.mapForm.area = this.areaList[0].area_id\n          if (this.areaList && this.areaList.length > 0) {\n            this.total = this.areaList.length\n          } */\n          res.result.some(item => {\n            if(item.area_id == this.defaultAreaId){\n              this.center.lng = item.longitude\n              this.center.lat = item.latitude\n              let params = {}\n              params.area_id = item.area_id;\n              queryAreaGps(params).then(res => {\n                if (res.retcode === 200 && res.result && res.result.length > 0) {\n                  //this.lineList = res.result[0].fields;\n                  //下拉框内容\n                  this.lineList = [];\n                  this.lineList.push({\"field_id\":\"全部\"})\n                  res.result[0].fields.forEach(f => {\n                      this.lineList.push({\"field_id\":f.field_id})\n                  })\n                  //线路图\n                  this.mapForm.line = this.currentLine;\n                  this.lines2 = [];\n                  this.linePoint = [];\n                  res.result[0].fields.forEach(line => {\n                    this.buildMapLines(line);\n                  })\n                  return true;\n                }\n              })\n            }\n          })\n        }\n      })\n    },\n    buildMapLines(line) {\n      if(this.currentLine == \"全部\" || this.realTime || line.field_id == this.currentLine){\n        let tempObj = {}\n        tempObj.points = []\n        line.nodes.forEach(node => {\n          let nodeObj = {}\n          nodeObj.lng = node.longitude\n          nodeObj.lat = node.latitude\n          nodeObj.order = node.order\n          tempObj['points'].push(nodeObj)\n        })\n        tempObj.field_id = line.field_id\n        tempObj.name = line.field_name\n        tempObj.head1 = line.head1\n        tempObj.phone1 = line.phone1\n        tempObj.head2 = line.head2\n        tempObj.phone2 = line.phone2\n        tempObj.lineColor = NORMAL_COLOR\n        this.lines2.push(tempObj)\n        //获取起点和终点\n        if(this.linePoint.length == 0){//起点只要一个\n          let startPoint = {};\n          startPoint.lng = line.nodes[0].longitude\n          startPoint.lat = line.nodes[0].latitude\n          startPoint.filedId = line.field_id\n          startPoint.type = \"start\"\n          startPoint.id = line.field_id + \"start\"\n          startPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELhIs.png\"\n          this.linePoint.push(startPoint);\n        }\n        let endPoint = {};\n        endPoint.lng = line.nodes[line.nodes.length-1].longitude\n        endPoint.lat = line.nodes[line.nodes.length-1].latitude\n        endPoint.filedId = line.field_id\n        endPoint.type = \"end\"\n        endPoint.id = line.field_id + \"end\"\n        endPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELgsS.png\"\n        this.linePoint.push(endPoint);\n      }\n    },\n    queryLineDetail() {\n      let now = new Date()\n      let nowStr = now.getFullYear() + '-' + (Number(now.getMonth()) + 1) + '-' + now.getDay() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n      let beforeStr = now.getFullYear() + '-' + (Number(now.getMonth()) + 1) + '-' + Number(now.getDay() - 7) + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds()\n      queryLineDetail({ begin_time: '2020-8-1 00:00:00', end_time: '2020-8-10 00:00:00' }).then(res => {\n        if (res.retcode == 200 && res.result && res.result.length > 0) {\n          this.chart1Data.push(['amount', 'product'])\n          res.result.forEach(item => {\n            let temp = []\n            temp.push(item.total_count)\n            temp.push(item.name)\n            this.chart1Data.push(temp)\n            this.chargeCount += Number(item.total_deal)\n            this.disCount += Number(item.total_miss)\n          })\n        } else {\n          this.chart1Data = [\n            ['amount', 'product'],\n            [40, '示例一'],\n            [20, '示例二'],\n            [30, '示例三'],\n            [16, '示例四']\n          ]\n        }\n        //this.initChart1()\n        //this.initChart3()\n      })\n    },\n\n    getTableData() {\n      this.currentEndDate = this.defaultEndDate();\n      if(this.currentDate == 1){\n        this.currentStartDate = this.defaultStartDate();\n      }else if(this.currentDate == 2){\n        this.currentStartDate = this.defaultStartDate2();\n      }else if(this.currentDate == 3){\n        this.currentStartDate = this.defaultStartDate3();\n      }\n      let params = {}\n      params.page = 1\n      params.limit = 1000\n      params.begin_time = this.currentStartDate;\n      params.end_time = this.currentEndDate;\n      params.area_id = this.defaultAreaId;\n      queryAlarm(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.tableData = [];\n          this.alarmPoints = [];\n          res.result.forEach(it => {\n            if(it.field_id == this.currentLine || this.currentLine == \"全部\"){\n              this.tableData.push({\"field_id\":it.field_id,\"alarm_level\":it.alarm_level})\n              let alarmPoint = {};\n              alarmPoint.lng = it.longitude\n              alarmPoint.lat = it.latitude\n              alarmPoint.id = it.id\n              alarmPoint.type = \"alarm\"\n              alarmPoint.level = it.alarm_level\n              alarmPoint.beginTime = it.begin_time\n              alarmPoint.endTime = it.end_time\n              alarmPoint.position = it.position\n              alarmPoint.alarmType = it.alarm_type\n              alarmPoint.continueTime = it.continue_time\n              alarmPoint.fieldId = it.field_id\n              if(it.alarm_level == \"严重告警\"){\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTa9g.png\"\n              }else if(it.alarm_level == \"中级告警\"){\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTwcj.png\"\n              }else{\n                alarmPoint.icon = \"https://z3.ax1x.com/2021/06/20/RFTd3Q.png\";\n              }\n              this.alarmPoints.push(alarmPoint);\n            }\n          })\n        }\n      })\n    },\n    getRealTableData() {\n      let params = {}\n      queryRealTimeAlarm(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.tableData = res.result\n          this.alarmPoints = [];\n          res.result.forEach(it => {\n            let alarmPoint = {};\n            alarmPoint.lng = it.longitude\n            alarmPoint.lat = it.latitude\n            alarmPoint.id = it.id\n            alarmPoint.type = \"alarm\"\n            alarmPoint.level = it.alarm_level\n            alarmPoint.beginTime = it.begin_time\n            alarmPoint.assigneeName = it.name\n            alarmPoint.assigneePhone = it.phone\n            alarmPoint.fieldId = it.field_id\n            if(it.alarm_level == \"严重告警\"){\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELfaj.gif\"\n            }else if(it.alarm_level == \"中级告警\"){\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/RELWZQ.gif\"\n            }else{\n              alarmPoint.icon = \"https://z3.ax1x.com/2021/06/21/REL2qg.gif\";\n            }\n            this.alarmPoints.push(alarmPoint);\n          })\n        }\n      })\n    },\n    \n    getCenter() {\n      getMapCenter().then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.center = res.result\n        }\n      })\n    },\n    \n    getDeviceGps() {\n      queryDeviceGps().then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.polylinePath = res.result\n          this.polylinePath.forEach(item => {\n            item.lng = item.longitude\n            item.lat = item.latitude\n            item.id = item.device_id\n          })\n        }\n      })\n    },\n    getDeviceInfo() {\n     deviceInfo().then(res => {\n       debugger\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.deviceErrorMsg = \"\";\n          let flag = true\n          res.result.channels.forEach(it => {\n            if(it.fiber_info != \"正常\"){\n              flag = false\n              deviceErrorMsg += it.id+\"号通道\"+it.fiber_info+\"&\"\n            }\n          })\n          if(flag && res.result.is_online && res.result.is_device_online && res.result.device_status ){\n            this.blinkImg = require(\"../../assets/img/greenLight.png\")\n          }else{\n            this.blinkImg = require(\"../../assets/img/redLigth.png\")\n            if(!this.isDeviceError){\n              this.showDeviceMsg = true;\n            }\n            this.isDeviceError = true;\n            if(!res.result.is_online){\n              this.deviceErrorMsg += \"数据处理程序故障&\"\n            }\n            if(!res.result.is_device_online){\n              this.deviceErrorMsg += \"断网&\"\n            }\n            if(!res.result.device_status){\n              this.deviceErrorMsg += \"设备故障\"\n            }\n          }\n        }\n      })\n    },\n    getAlarmFields() {\n      getAlarmFields().then(res => {\n        if (res.retcode == 200 && res.result && res.result.length > 0) {\n          let result = res.result\n          let arr = []\n          // Object.keys(result).forEach(k => {\n          //   arr.push(result[k])\n          // })\n          result.forEach(zone => {\n            let field = {}\n            field.nodes = zone.node_list\n            field.nodes.forEach(node => {\n              node.lng = node.longitude\n              node.lat = node.latitude\n            })\n            field.zone = zone.zone\n            arr.push(field)\n          })\n          arr[0]['nodes'][1].lng = 120.243142000000\n          arr[0]['nodes'][1].lat = 30.227980000000\n          console.log('arr', arr)\n          this.alarmlines = arr\n        }\n      })\n    },\n    getAreaInfo() {\n      let params = {}\n      params.starttime = '2020-07-21 15:01:23'\n      params.endtime = '2020-07-28 15:01:23'\n      getAreaInfo(params).then(res => {\n        if (res.retcode === 200) {\n          // [52, '责任区'],\n          // [40, '设备数'],\n          // [30, '防区型'],\n          // [20, '定位型'],\n          // [40, '责任人']\n          let tempArr1 = []\n          tempArr1.push(res.zone_num || 0)\n          tempArr1.push('责任区')\n          let tempArr2 = []\n          tempArr2.push((res.gt_num + res.smt_num) || 0)\n          tempArr2.push('设备数')\n          let tempArr3 = []\n          tempArr3.push(res.smt_num || 0)\n          tempArr3.push('防区型')\n          let tempArr4 = []\n          tempArr4.push(res.gt_num || 0)\n          tempArr4.push('定位型')\n          let tempArr5 = []\n          tempArr5.push((res.zone_num * 2) || 0)\n          tempArr5.push('责任人')\n          this.areaData = [ ['amount', 'product'], tempArr1, tempArr2, tempArr3, tempArr4, tempArr5 ]\n          console.log('this.areaData', this.areaData)\n          setTimeout(() => {\n            this.initChart2()\n          }, 500)\n        }\n      })\n    },\n    gettTime() {\n      let time = new Date()\n      let timestr = time.toLocaleString()\n      this.time = timestr\n    },\n\n    handleShowDecInfo(id) {\n      getDeviceInfo({ id: id }).then(res => {\n        if (res.retcode === 200) {\n          if (!res.result) {\n            this.$message({ type: 'warning', message: '设备数据异常！' })\n          } else {\n            this.currentDev = res.result\n            this.infoType = 1\n            this.showWindow = true\n            this.$forceUpdate()\n          }\n        }\n      })\n    },\n    showAlarmInfo(it) {\n      this.currentAlarm = it\n      this.infoType = 2\n      this.showWindow = true\n      this.$forceUpdate()\n    },\n    addToWhiteList(id) {\n      this.showModal = true\n      this.whiteListForm.id = id\n      this.whiteListForm.endDate = new Date()\n    },\n    changeLine(val){\n      console.log(val);\n      this.currentLine = val;\n      let params = {}\n      params.area_id = this.defaultAreaId;\n      queryAreaGps(params).then(res => {\n        if (res.retcode === 200 && res.result && res.result.length > 0) {\n          this.lines2 = [];\n          this.linePoint = [];\n          res.result[0].fields.forEach(line => {\n            this.buildMapLines(line);\n          })\n        }\n      })\n      this.getTableData();\n    },\n    changeTime(val){\n      console.log(val);\n      this.currentDate = val;\n      this.getTableData();\n    },\n    test(id) {\n      // this.info.height = event.screenY\n      // this.info.width = event.screenX\n      let params = {}\n      params.id = id\n      params.starttime = '2020-08-01 00:00:00'\n      params.endtime = '2020-08-10 00:00:00'\n      queryZoneInfo(params).then(res => {\n        if (res.retcode === 200) {\n          if (!res.result) {\n            this.$message({ type: 'warning', message: '线路数据异常！' })\n          } else {\n            this.currentZone = res.result\n            this.infoType = 0\n            this.showWindow = true\n            this.$forceUpdate()\n          }\n        }\n      })\n      // this.$refs['infoWindow'].style.left = event.pixel.x + 15 + 'px'\n      // this.$refs['infoWindow'].style.top = event.pixel.y - 205 + 'px'\n    },\n    handler ({BMap, map}) {\n      console.log('首页地图信息：', BMap, map)\n      this.center.lng = this.center.longitude\n      this.center.lat = this.center.latitude\n      this.zoom = 14\n      window.map = map;\n      map.ControlAnchor = 'BMAP_ANCHOR_TOP_LEFT'\n      map.enableAutoResize()\n    },\n    lineIn(it,i) {\n      //let tempArr = str.split('--')\n      //this.lines[tempArr[0]].fields[tempArr[1]].lineColor = '#e6a700'\n      this.lines2[i].lineColor = '#e6a700'\n    },\n    lineOut(it,i) {\n      //let tempArr = str.split('--')\n      //this.lines[tempArr[0]].fields[tempArr[1]].lineColor = '#23cefd'\n      this.lines2[i].lineColor = '#23cefd'\n    },\n    showLineInfo(it) {\n      this.currentLineInfo = it\n      this.infoType = 1\n      this.showWindow = true\n      this.$forceUpdate()\n    },\n    handleShowAreaInfo() {\n      this.showArea = !this.showArea\n    },\n\n    handleFullScreen(){\n      let element = this.$refs.doc\n      if (this.fullscreen) {\n          if (document.exitFullscreen) {\n              document.exitFullscreen();\n          } else if (document.webkitCancelFullScreen) {\n              document.webkitCancelFullScreen();\n          } else if (document.mozCancelFullScreen) {\n              document.mozCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n              document.msExitFullscreen();\n          }\n      } else {\n          if (element.requestFullscreen) {\n              element.requestFullscreen();\n          } else if (element.webkitRequestFullScreen) {\n              element.webkitRequestFullScreen();\n          } else if (element.mozRequestFullScreen) {\n              element.mozRequestFullScreen();\n          } else if (element.msRequestFullscreen) {\n              // IE11\n              element.msRequestFullscreen();\n          }\n      }\n      this.fullscreen = !this.fullscreen;\n    },\n\n    initChart2() {\n      this.chart2 = echarts.init(this.$refs.chart2)\n      this.chart2.setOption({\n          dataset: {\n              source: this.areaData\n          },\n          grid: {\n            top: \"50px\",\n            left: \"50px\",\n            bottom: \"10%\"\n          },\n          xAxis: {\n              type: 'value',\n              // name: '事件数',\n              color: \"#d6d2d2\",\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  }\n              },\n              axisLine: {\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              }\n          },\n          yAxis: {\n              type: 'category',\n              // name: '责任区名',\n              splitLine: {show: false},\n              // data: ['一', '二', '三', '四', '五', '六', '七', '八', '九'],\n              axisLabel: {\n                  show: true,\n                  textStyle: {\n                      color: '#d6d2d2'\n                  },\n                  width: '50px'\n              },\n              axisLine: {\n                  show: false,\n                  lineStyle: {\n                      color: '#fff', // 颜色\n                  }\n              },\n              nameTextStyle: {\n                width: \"50px\"\n              }\n          },\n          color: \"#23cefd\",\n          // grid: {containLabel: true},\n          series: [\n              {\n                  type: 'bar',\n                  encode: {\n                      // Map the \"amount\" column to X axis.\n                      x: 'amount',\n                      // Map the \"product\" column to Y axis\n                      y: 'product'\n                  },\n                  barWidth: 20\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart2.resize();\n      })\n    },\n\n    initChart3() {\n      this.chart3 = echarts.init(this.$refs.chart3)\n      this.chart3.setOption({\n          color:[\"#23cefd\", \"#61a0a8\"],\n          series: [\n              {\n                  name: '事件类型',\n                  type: 'pie',\n                  radius: ['40%', '55%'],\n                  center: ['50%', '60%'],\n                  label: {\n                      formatter: '{b|{b}}：\\n{hr|}\\n    {d|{d}}%   ',\n                      backgroundColor: 'rgba(0,0,0,0.2)',\n                      borderColor: '#aaa',\n                      borderWidth: 1,\n                      borderRadius: 4,\n                      // padding: [2, 7],\n                      rich: {\n                          b: {\n                              // color: '#999',\n                              lineHeight: 20,\n                              align: 'center',\n                          },\n                          d: {\n                            // color: '#999',\n                            lineHeight: 20,\n                            align: 'center'\n                          },\n                          hr: {\n                              borderColor: '#aaa',\n                              width: '100%',\n                              borderWidth: 0.5,\n                              height: 0\n                          },\n                      }\n                  },\n                  data: [\n                      {value: this.disCount || 10, name: '非管控中'},\n                      {value: this.chargeCount  || 10, name: '管控中'}\n                  ]\n              }\n          ]\n        }\n      )\n      window.addEventListener(\"resize\",()=>{\n        this.chart3.resize();\n      })\n    },\n    openSwitch(){\n      this.realTime = !this.realTime;\n      console.log(this.realTime)\n      if(this.realTime){\n        this.getAreaList() // 获取地区列表\n        this.getRealTableData();\n      }else{\n        this.getAreaList() // 获取地区列表\n        this.getTableData() // 获取事件列表数据\n      } \n    },\n    hideModal(){\n      // 取消弹窗回调\n      this.showModal = false\n    },\n    submitModal(){\n      let params = {}\n      params.alarm_id = this.whiteListForm.id\n      console.log(this.whiteListForm.endDate);\n      if(this.whiteListForm.endDate){\n        params.end_time = (this.whiteListForm.endDate.getTime()+\"\").substr(0,10)\n        alertWhite(params).then(res => {\n          if (res.retcode === 200) {\n            this.$message({ type: 'success', message: '加入白名单成功！' })\n            //加入白名单后延迟2秒获取告警\n            setTimeout(function () {\n              if(this.realTime){\n                this.getRealTableData();\n              }else{\n                this.getTableData();\n              }\n            },2000)\n          }\n        })\n        this.showModal = false\n      }else{\n          this.$message({ type: 'warning', message: '请输入到期日！' })\n      }\n    },\n    hideDeviceMsg (){\n      // 取消弹窗回调\n      this.showDeviceMsg = false\n    },\n    showBlink() {\n      var blink = document.getElementById(\"blink\");\n      //this.$refs.blink\n      blink.style.visibility = (blink.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    }\n  }\n}\n\n\n</script>\n\n<style scoped lang='less'>\n  .f-width {\n    width: 100%;\n  }\n\n  .f-height {\n    height: 100%;\n  }\n\n  .abs {\n    position: absolute;\n  }\n\n  .rel {\n    position: relative;\n  }\n\n\n  .gs-home-wrapper {\n    // background:url(../../assets/img/backimage.jpg) no-repeat;\n    .bg-img {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    }\n\n    .top-title {\n      height: 10%;\n      width: 100%;\n      position: absolute;\n      display: flex;\n\n      .top-left-wrapper {\n        width: 21%;\n        height: 30%;\n        position: absolute;\n        left: 1.2vw;\n        top: 5%;\n      }\n\n      .top-right-img {\n        width: 21%;\n        height: 30%;\n        right: 1.2vw;\n        top: 5%;\n      }\n\n      .top-mid-wrapper {\n        width: 64%;\n        height: 100%;\n        position: absolute;\n        left: 18%;\n\n        .title-content {\n          font-size: 1.5vw;\n          color: #23cefd;\n          text-align: center;\n          left: 0;\n          top: 15%;\n        }\n      }\n    }\n\n    .bottom-content {\n      height: 90%;\n      bottom: 0px;\n\n      .content-left {\n        width: 25%;\n        padding: 0 20px;\n\n        .content-left-top {\n          height: 18%;\n          margin-bottom: 1.5vh;\n        }\n\n        .content-left-mid {\n          height: 49.2%;\n          margin-bottom: 1.5vh;\n\n          .event-num-wrapper {\n            height: 15%;\n            top: 17%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding-right: 20px;\n\n            .event-num-words {\n              color: #23cefd;\n              font-size: 18px;\n            }\n\n            .event-num-content {\n              width: 50%;\n              height: 80%;\n              border: 1.5px solid #23cefd;\n              border-radius: 10px;\n              margin: 0 10px;\n              font-size: 2vw;\n              color: #23cefd;\n              text-align: center;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .bm-view {\n    padding: 10px;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 3;\n  }\n\n  .form-input {\n      width: 334px;\n      margin-right: 10px;\n  }\n\n  .gs-info-window-area {\n    position: absolute;\n    width: 430px;\n    height: 40px;\n    background: rgba(53, 199, 186, 0.85);\n    z-index: 1;\n    left: 10px;\n    top: 5px;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n\n    .area-wrapper {\n      height: 40px;\n      width: 100%;\n      border-bottom: 1px solid #dfe6ec;\n      color: #f3f3f3;\n      font-size: 17px;\n      padding-left: 15px;\n      line-height: 40px;\n      position: relative;\n    }\n  }\n\n  .line-info-title {\n      height: 40px;\n      border-bottom: 1px solid rgb(35 206 253);\n\n      .title-detail {\n        padding-left: 8px;\n        line-height: 40px;\n      }\n    }\n\n  .line-info-content {\n      padding: 10px;\n\n      .content-detail {\n        margin-bottom: 5px;\n      }\n  }\n\n  .com-title-wrapper {\n    height: 30px;\n    width: 65%;\n    left: 10px;\n    top: 10px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    .com-title-content {\n      text-align: center;\n      width: 70%;\n      left: 0;\n      top: 5px;\n      color: #23cefd;\n    }\n  }\n\n  .map-select {\n    width: 70%;background: #121c35\n  }\n\n  .chart1 {\n    height:65%;\n    width:90%;\n    left: 20px;\n    bottom: 0;\n    z-index:2;\n  }\n\n  /deep/ .el-input__inner {\n    background: rgba(0,0,0,0.2);\n    border: 1px solid #0e7eb5;\n    color: #23cefd;\n  }\n\n  /deep/ .el-input__inner:hover {\n    border: 1px solid #0e7eb5 !important;\n  }\n\n  /deep/ .el-input__inner:focus {\n    border: 1px solid #0e7eb5 !important;\n  }\n\n .user_skills{\n   margin: auto;\n  }\n  .user_skills /deep/ .el-table--fit{\n      padding: 20px;\n  }\n  .user_skills /deep/  .el-table, .el-table__expanded-cell {\n      background-color: transparent;\n  }\n\n  .user_skills /deep/ .el-table tr {\n    color: #d6d2d2;\n    background-color: transparent!important;\n  }\n  .user_skills /deep/ .el-table th {\n    background-color: transparent!important;\n    color: #d6d2d2;\n    border-bottom: unset;\n  }\n  .user_skills /deep/ .el-table td {\n    color: #d6d2d2;\n    border-bottom: unset;\n  }\n  .user_skills /deep/  .el-table--enable-row-transition .el-table__body td, .el-table .cell{\n    background-color: transparent;\n  }\n  .el-table::before {//去除底部白线\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 0px;\n  }\n\n  @media screen and (max-width: 1320px) {\n    .gs-info-window-area {\n      top: 70px;\n    }\n}\n.switch-all{\n  position: absolute;\n  right: 40px;\n  top: 10px;\n  z-index:100; \n}\n.switch{\n    width: 2rem;\n    height: 1.1rem;\n    border-radius: 50px;\n    border: 1px solid #0671a8;\n    position: absolute;\n}\n.switch-btn{\n    width: 1.1rem;\n    height: 1.1rem;\n    border-radius: 50%;\n    border: 1px solid #021019;\n    position: absolute;\n    background-color: #00aeff;\n    top: -1px;\n    left: -1px;\n    transition:left .5s;\n    -moz-transition:left .5s; /* Firefox 4 */\n    -webkit-transition:left .5s; /* Safari and Chrome */\n    -o-transition:left .5s; /* Opera */\n}\n.switch-bg{\n    background-color: #104c74;\n    width: 1rem;\n    height: 1.1rem;\n    border-radius: 50px;\n    transition: width .5s;\n    -moz-transition: width .5s; /* Firefox 4 */\n    -webkit-transition:  width .5s; /* Safari and Chrome */\n}\n.switch-btn.on{\n    left: 1rem;\n}\n.switch-bg.on{\n    width: 2rem;\n}\n/*滚动条样式*/\n.scrollbar {\n  white-space: nowrap;\n  el-scrollbar {\n    display: flex;\n    justify-content: space-around;\n    padding: 0 10px;\n  }\n  .el-scrollbar__wrap {\n    overflow: scroll;\n    width: 110%;\n    height: 100%;\n  }\n\n}\n\n</style>\n"],"sourceRoot":"src/views/dashboard"}]}